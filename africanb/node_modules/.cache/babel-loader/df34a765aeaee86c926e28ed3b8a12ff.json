{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nexport default {\n  name: \"CreerModeAbonnement\",\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      referenceAbonnementList: [],\n      referenceAbonnement: {\n        referenceFamilleDesignation: \"referenceFamillePeriodiciteAbonnement\"\n      },\n      objectToSendReferenceAbonnement: {\n        datas: []\n      },\n      modeAbonnementCompagnieModel: {\n        designation: null,\n        dateDebutAbonnement: null,\n        dateFinAbonnement: null,\n        redevance: null,\n        redevancePublicite: null,\n        typeModeAbonnementDesignation: null,\n        periodiciteAbonnementDesignation: null,\n        compagnieTransportRaisonSociale: null\n      }\n    };\n  },\n  validations: {\n    modeAbonnementCompagnieModel: {\n      designation: {\n        required\n      }\n    }\n  },\n  methods: {\n    // SOUMISSION DU FORMULAIRE\n    submitForm() {},\n    async creerAbonnementCompagnie() {}\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN ABONNEMENT\n\n    designationAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementCompagnieModel.designation.$dirty) return errors;\n      !this.$v.modeAbonnementCompagnieModel.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    prixBagageErrors() {\n      const errors = [];\n      if (!this.$v.bagageModel.coutBagageParTypeBagage.$dirty) return errors;\n      !this.isNumber(this.bagageModel.coutBagageParTypeBagage) && errors.push('Saisissez un prix correct.');\n      !this.$v.bagageModel.coutBagageParTypeBagage.required && errors.push('Le prix est obligatoire.');\n      return errors;\n    },\n    typeBagageErrors() {\n      const errors = [];\n      if (!this.$v.bagageModel.typeBagageDesignation.$dirty) return errors;\n      !this.$v.bagageModel.typeBagageDesignation.required && errors.push('La selection du type du sac est obligatoire.');\n      return errors;\n    },\n    nombreBagageErrors() {\n      const errors = [];\n      !this.isNumber(this.bagageModel.nombreBagageGratuitParTypeBagage) && errors.push('Saisissez un nombre correct.');\n      if (!this.$v.bagageModel.nombreBagageGratuitParTypeBagage.$dirty) return errors;\n      !this.$v.bagageModel.nombreBagageGratuitParTypeBagage.required && errors.push('Veuillez renseigner ce champs.');\n      return errors;\n    }\n  }\n};","map":{"version":3,"mappings":";AAwCA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;MAEAC;QACAC;MACA;MAEAC;QACAC;MACA;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IACAT;MAEAC;QACAS;MACA;IAEA;EACA;EAEAC;IACA;IACAC,cAEA;IAEA,kCAEA;EACA;EAEAC;IAEA;;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;EAEA;AAEA","names":["name","data","errorMsg","successMsg","overlay","referenceAbonnementList","referenceAbonnement","referenceFamilleDesignation","objectToSendReferenceAbonnement","datas","modeAbonnementCompagnieModel","designation","dateDebutAbonnement","dateFinAbonnement","redevance","redevancePublicite","typeModeAbonnementDesignation","periodiciteAbonnementDesignation","compagnieTransportRaisonSociale","validations","required","methods","submitForm","computed","designationAbonnementErrors","prixBagageErrors","typeBagageErrors","nombreBagageErrors"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["CreerModeAbonnement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card width=\"1200\" elevation=\"3\">\n                    <v-card-title>MODE D'ABONNEMENTS</v-card-title>\n                    <v-card-subtitle>Définissez vos modes d'abonnements</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"5\">\n                                <v-text-field :error-messages=\"designationAbonnementErrors\" rounded dense outlined label=\"Désignation de l'abonnement\" v-model.trim=\"$v.modeAbonnementCompagnieModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col cols=\"5\">\n                                <v-select :error-messages=\"typeBagageErrors\" :items=\"referenceBagageList\" item-text=\"designation\" item-value=\"designation\" rounded dense outlined color=\"teal\" label=\"sélectionnez un type de bagage\" v-model.trim=\"$v.bagageModel.typeBagageDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col cols=\"3\">\n                                <v-text-field :error-messages=\"nombreBagageErrors\" rounded dense outlined label=\"nombre de sac gratuit\" v-model.trim=\"$v.bagageModel.nombreBagageGratuitParTypeBagage.$model\"></v-text-field>\n                            </v-col>\n                            <v-col cols=\"5\">\n                                <v-text-field :error-messages=\"prixBagageErrors\" rounded dense outlined color=\"teal\" label=\"prix par type de sac\" suffix=\"FCFA\" v-model.number=\"$v.bagageModel.coutBagageParTypeBagage.$model\"></v-text-field>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n\n                    <v-card-actions>\n                        <v-btn small rounded outlined>REINITIALISER</v-btn>\n                        <v-btn small type=\"submit\" rounded outlined color=\"primary\">VALIDER</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios'\n\nexport default {\n    name:\"CreerModeAbonnement\",\n    data(){\n        return{\n            errorMsg : null,\n            successMsg : null,\n            overlay : false,\n\n            referenceAbonnementList:[],\n\n            referenceAbonnement:{\n                referenceFamilleDesignation: \"referenceFamillePeriodiciteAbonnement\"\n            },\n\n            objectToSendReferenceAbonnement:{\n                datas:[],\n            },\n\n            modeAbonnementCompagnieModel:{\n                designation : null,\n                dateDebutAbonnement:null,\n                dateFinAbonnement: null,\n                redevance : null, \n                redevancePublicite : null,\n                typeModeAbonnementDesignation: null,\n                periodiciteAbonnementDesignation: null,\n                compagnieTransportRaisonSociale: null,\n            }\n        }\n    },\n\n    validations:{\n        modeAbonnementCompagnieModel:{\n            \n            designation:{\n                required\n            },\n\n        }\n    },\n    \n    methods:{\n        // SOUMISSION DU FORMULAIRE\n        submitForm(){\n            \n        },\n\n        async creerAbonnementCompagnie(){\n\n        }\n    },\n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN ABONNEMENT\n\n        designationAbonnementErrors(){\n           const errors = [];\n            if (!this.$v.modeAbonnementCompagnieModel.designation.$dirty) return errors\n            !this.$v.modeAbonnementCompagnieModel.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        prixBagageErrors(){\n           const errors = [];\n            if (!this.$v.bagageModel.coutBagageParTypeBagage.$dirty) return errors\n            !this.isNumber(this.bagageModel.coutBagageParTypeBagage) && errors.push('Saisissez un prix correct.')\n            !this.$v.bagageModel.coutBagageParTypeBagage.required && errors.push('Le prix est obligatoire.')\n            return errors \n        },\n\n        typeBagageErrors(){\n           const errors = [];\n            if (!this.$v.bagageModel.typeBagageDesignation.$dirty) return errors\n            !this.$v.bagageModel.typeBagageDesignation.required && errors.push('La selection du type du sac est obligatoire.')\n            return errors \n        },\n\n        nombreBagageErrors(){\n           const errors = [];\n           !this.isNumber(this.bagageModel.nombreBagageGratuitParTypeBagage) && errors.push('Saisissez un nombre correct.')\n            if (!this.$v.bagageModel.nombreBagageGratuitParTypeBagage.$dirty) return errors\n            !this.$v.bagageModel.nombreBagageGratuitParTypeBagage.required && errors.push('Veuillez renseigner ce champs.')\n            return errors \n        },\n\n    }\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}