{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { required } from 'vuelidate/lib/validators';\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, API_RECUPERER_LISTE_OFFRE_VOYAGE } from '../globalConfig/globalConstConfig';\nexport default {\n  name: 'ModifierModeTarif.vue',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: null,\n      referenceModeOffreVoyageList: [],\n      referenceModeCategorieVoyageurList: [],\n      offreVoyageParCompagnieTransportList: [],\n      prixOffreVoyageModel: {\n        id: null,\n        designation: null,\n        prix: null,\n        modeDesignation: null,\n        categorieVoyageurDesignation: null,\n        offreVoyageDesignation: null\n      },\n      objectToSendReferenceModeCategorieVoyageur: {\n        datas: []\n      },\n      objectToSendReferenceModeOffre: {\n        datas: []\n      },\n      referenceModeOffreVoyage: {\n        referenceFamilleDesignation: \"referenceFamilleMode\"\n      },\n      referenceCategorieVoyageur: {\n        referenceFamilleDesignation: \"referenceFamilleCategorieVoyaeur\"\n      },\n      offreVoyageObject: {\n        data: {\n          compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\"\n        }\n      }\n    };\n  },\n  validations: {\n    prixOffreVoyageModel: {\n      designation: {\n        required\n      },\n      prix: {\n        required\n      },\n      modeDesignation: {\n        required\n      },\n      offreVoyageDesignation: {\n        required\n      },\n      categorieVoyageurDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    //MODIFIER UN MODE PORTANT SUR UNE OFFRE DE VOYAGE\n    async editerModeOffreVoyage() {\n      if (localStorage.getItem(\"modeOffreVoyage\")) {\n        try {\n          const modeOffreVoyageEditing = JSON.parse(localStorage.getItem(\"modeOffreVoyage\"));\n          console.log(modeOffreVoyageEditing);\n          this.prixOffreVoyageModel.id = modeOffreVoyageEditing.id;\n          this.prixOffreVoyageModel.designation = modeOffreVoyageEditing.designation;\n          this.prixOffreVoyageModel.offreVoyageDesignation = modeOffreVoyageEditing.offreVoyageDesignation;\n          this.offreVoyage.categorieVoyageurDesignation = modeOffreVoyageEditing.categorieVoyageurDesignation;\n          this.offreVoyage.villeDepartDesignation = modeOffreVoyageEditing.villeDepartDesignation;\n          this.offreVoyage.villeDestinationDesignation = modeOffreVoyageEditing.villeDestinationDesignation;\n          localStorage.removeItem(\"modeOffreVoyage\");\n        } catch (error) {\n          localStorage.removeItem(\"modeOffreVoyage\");\n        }\n      } else {\n        this.$router.replace({\n          path: '/selectionnerOffreVoyage'\n        });\n      }\n    },\n    // RECUPERER LA LISTE DES OFFRES DE VOYAGES DISPONIBLES PAR COMPAGNIE DE TRANSPORT\n    async obtenirOffreVoyageParCompagnieTransport() {\n      axios.post(API_RECUPERER_LISTE_OFFRE_VOYAGE, this.offreVoyageObject).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code != 800) {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 4000);\n          } else {\n            this.offreVoyageParCompagnieTransportList = response.data.items;\n          }\n        } else {\n          this.errorMsg = \"Erreur\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n      });\n    },\n    //OBTENIR REFERENCE DESIGNATION TYPE OFFRE DE VOYAGE\n    async obtenirReferenceModeOffreVoyage() {\n      this.objectToSendReferenceModeOffre.datas.push(this.referenceModeOffreVoyage);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceModeOffre).then(response => {\n        this.referenceModeOffreVoyageList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION DU MODE D'UNE OFFRE\n    designationPrixOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.prixOffreVoyageModel.designation.$dirty) return errors;\n      !this.$v.prixOffreVoyageModel.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    pricePrixOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.prixOffreVoyageModel.prix.$dirty) return errors;\n      !this.isNumber(this.prixOffreVoyageModel.prix) && errors.push('Saisissez un prix correct.');\n      !this.$v.prixOffreVoyageModel.prix.required && errors.push('Le prix est obligatoire.');\n      return errors;\n    },\n    modePrixOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.prixOffreVoyageModel.modeDesignation.$dirty) return errors;\n      !this.$v.prixOffreVoyageModel.modeDesignation.required && errors.push('La selection du mode de l\\'offre est obligatoire.');\n      return errors;\n    },\n    offreVoyagePrixOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.prixOffreVoyageModel.offreVoyageDesignation.$dirty) return errors;\n      !this.$v.prixOffreVoyageModel.offreVoyageDesignation.required && errors.push('Sélectionnez une offre de voyage.');\n      return errors;\n    },\n    categoriePrixOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.prixOffreVoyageModel.categorieVoyageurDesignation.$dirty) return errors;\n      !this.$v.prixOffreVoyageModel.categorieVoyageurDesignation.required && errors.push('Veuillez selectionner une catégorie.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirReferenceModeOffreVoyage();\n    this.obtenirOffreVoyageParCompagnieTransport();\n    this.editerModeOffreVoyage();\n  }\n};","map":{"version":3,"mappings":";AA6CA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MAEAC;MACAC;MACAC;MAEAC;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;MACA;MAEAC;QACAD;MACA;MAEAE;QACAC;MACA;MAEAC;QACAD;MACA;MAEAE;QACApB;UACAqB;QACA;MACA;IAGA;EACA;EAEAC;IAEAf;MACAE;QACAc;MACA;MACAb;QACAa;MACA;MACAZ;QACAY;MACA;MACAV;QACAU;MACA;MACAX;QACAW;MACA;IACA;EAEA;EAEAC;IAEA;IACA;MACA;QACA;UACA;UACAC;UACA;UACA;UACA;UACA;UACA;UACA;UACAC;QACA;UACAA;QACA;MACA;QACA;UAAAC;QAAA;MACA;IACA;IAEA;IACA;MACAC;QACA;UACA;YACA;YACAC;YACAC;cACAD;YACA;UACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;MACA;IACA;EAEA;EAEAE;IAEA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EACA;EAEAC;IACA;IACA;IACA;EAEA;AACA","names":["name","data","errorMsg","successMsg","overlay","referenceModeOffreVoyageList","referenceModeCategorieVoyageurList","offreVoyageParCompagnieTransportList","prixOffreVoyageModel","id","designation","prix","modeDesignation","categorieVoyageurDesignation","offreVoyageDesignation","objectToSendReferenceModeCategorieVoyageur","datas","objectToSendReferenceModeOffre","referenceModeOffreVoyage","referenceFamilleDesignation","referenceCategorieVoyageur","offreVoyageObject","compagnieTransportRaisonSociale","validations","required","methods","console","localStorage","path","axios","$","setTimeout","computed","designationPrixOffreVoyageErrors","pricePrixOffreVoyageErrors","modePrixOffreVoyageErrors","offreVoyagePrixOffreVoyageErrors","categoriePrixOffreVoyageErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["ModifierModeTarif.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card width=\"1200\" elevation=\"3\">\n                    <v-card-title>GESTION DES MODES ET DU TARIF</v-card-title>\n                    <v-card-subtitle>Gérer le mode et les tarifs de l'offre</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"5\">\n                                <v-select disabled :error-messages=\"offreVoyagePrixOffreVoyageErrors\" :items=\"offreVoyageParCompagnieTransportList\" item-text=\"designation\" item-value=\"designation\" rounded dense outlined color=\"teal\" label=\"sélectionnez une offre\" v-model.trim=\"$v.prixOffreVoyageModel.offreVoyageDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col cols=\"5\">\n                                <v-text-field :error-messages=\"designationPrixOffreVoyageErrors\" rounded dense outlined label=\"Réference\" v-model.trim=\"$v.prixOffreVoyageModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col cols=\"5\">\n                                <v-select :error-messages=\"categoriePrixOffreVoyageErrors\" :items=\"referenceModeCategorieVoyageurList\" item-text=\"designation\" item-value=\"designation\" rounded dense outlined color=\"teal\" label=\"sélectionnez une categorie\" v-model.trim=\"$v.prixOffreVoyageModel.categorieVoyageurDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col cols=\"5\">\n                                <v-select :error-messages=\"modePrixOffreVoyageErrors\" :items=\"referenceModeOffreVoyageList\" item-text=\"designation\" item-value=\"designation\" rounded dense outlined color=\"teal\" label=\"Mode de l'offre\" v-model.trim=\"$v.prixOffreVoyageModel.modeDesignation.$model\"></v-select>\n                            </v-col>\n                            <v-col cols=\"5\">\n                                <v-text-field :error-messages=\"pricePrixOffreVoyageErrors\" rounded dense outlined color=\"teal\" label=\"Tarif de l'offre\" suffix=\"FCFA\" v-model.number=\"$v.prixOffreVoyageModel.prix.$model\"></v-text-field>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n\n                    <v-card-actions>\n                        <v-btn small rounded outlined>REINITIALISER</v-btn>\n                        <v-btn small type=\"submit\" rounded outlined color=\"teal\">ACCEPTER LES MODIFICATIONS</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport $ from 'jquery'\nimport { required } from 'vuelidate/lib/validators'\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE , API_RECUPERER_LISTE_OFFRE_VOYAGE} from '../globalConfig/globalConstConfig'\nexport default {\n    name:'ModifierModeTarif.vue',\n    data(){\n        return{\n\n            errorMsg : null,\n            successMsg: null,\n            overlay:null,\n\n            referenceModeOffreVoyageList : [],\n            referenceModeCategorieVoyageurList : [],\n            offreVoyageParCompagnieTransportList:[],\n\n            prixOffreVoyageModel:{\n                id:null,\n                designation : null, \n                prix: null,\n                modeDesignation:null,\n                categorieVoyageurDesignation:null, \n                offreVoyageDesignation: null\n            },\n\n            objectToSendReferenceModeCategorieVoyageur:{\n                datas:[],\n            },\n\n            objectToSendReferenceModeOffre:{\n                datas:[],\n            },\n\n            referenceModeOffreVoyage:{\n                referenceFamilleDesignation: \"referenceFamilleMode\"\n            },\n\n            referenceCategorieVoyageur:{\n                referenceFamilleDesignation: \"referenceFamilleCategorieVoyaeur\"\n            },\n\n            offreVoyageObject:{\n                data:{\n                    compagnieTransportRaisonSociale:\"COMPAGNIE KOUEVI CT\"\n                }\n            }\n\n\n        }\n    },\n\n    validations :{\n\n        prixOffreVoyageModel:{\n            designation:{\n                required\n            },\n            prix:{\n                required,\n            },\n            modeDesignation:{\n                required\n            },\n            offreVoyageDesignation:{\n                required\n            },\n            categorieVoyageurDesignation:{\n                required\n            }\n        }\n\n    },\n\n    methods:{\n\n        //MODIFIER UN MODE PORTANT SUR UNE OFFRE DE VOYAGE\n        async editerModeOffreVoyage(){\n            if (localStorage.getItem(\"modeOffreVoyage\")) {\n                try {\n                    const modeOffreVoyageEditing = JSON.parse(localStorage.getItem(\"modeOffreVoyage\"));\n                    console.log(modeOffreVoyageEditing)\n                    this.prixOffreVoyageModel.id = modeOffreVoyageEditing.id;\n                    this.prixOffreVoyageModel.designation = modeOffreVoyageEditing.designation;\n                    this.prixOffreVoyageModel.offreVoyageDesignation = modeOffreVoyageEditing.offreVoyageDesignation;\n                    this.offreVoyage.categorieVoyageurDesignation = modeOffreVoyageEditing.categorieVoyageurDesignation;\n                    this.offreVoyage.villeDepartDesignation = modeOffreVoyageEditing.villeDepartDesignation;\n                    this.offreVoyage.villeDestinationDesignation = modeOffreVoyageEditing.villeDestinationDesignation;\n                    localStorage.removeItem(\"modeOffreVoyage\");\n                } catch (error) {\n                    localStorage.removeItem(\"modeOffreVoyage\");\n                }\n            }else{\n                this.$router.replace({path:'/selectionnerOffreVoyage'})\n            }\n        },\n        \n        // RECUPERER LA LISTE DES OFFRES DE VOYAGES DISPONIBLES PAR COMPAGNIE DE TRANSPORT\n        async obtenirOffreVoyageParCompagnieTransport(){\n            axios.post(API_RECUPERER_LISTE_OFFRE_VOYAGE, this.offreVoyageObject ).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code != 800) {\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.offreVoyageParCompagnieTransportList = response.data.items\n                    }\n                }else{\n                    this.errorMsg = \"Erreur\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e\n            })\n        },\n\n        //OBTENIR REFERENCE DESIGNATION TYPE OFFRE DE VOYAGE\n        async obtenirReferenceModeOffreVoyage(){\n            this.objectToSendReferenceModeOffre.datas.push(this.referenceModeOffreVoyage)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceModeOffre).then((response) => {\n                this.referenceModeOffreVoyageList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n    },\n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION DU MODE D'UNE OFFRE\n        designationPrixOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.prixOffreVoyageModel.designation.$dirty) return errors\n            !this.$v.prixOffreVoyageModel.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        pricePrixOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.prixOffreVoyageModel.prix.$dirty) return errors\n            !this.isNumber(this.prixOffreVoyageModel.prix) && errors.push('Saisissez un prix correct.')\n            !this.$v.prixOffreVoyageModel.prix.required && errors.push('Le prix est obligatoire.')\n            return errors \n        },\n\n        modePrixOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.prixOffreVoyageModel.modeDesignation.$dirty) return errors\n            !this.$v.prixOffreVoyageModel.modeDesignation.required && errors.push('La selection du mode de l\\'offre est obligatoire.')\n            return errors \n        },\n\n        offreVoyagePrixOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.prixOffreVoyageModel.offreVoyageDesignation.$dirty) return errors\n            !this.$v.prixOffreVoyageModel.offreVoyageDesignation.required && errors.push('Sélectionnez une offre de voyage.')\n            return errors \n        },\n\n        categoriePrixOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.prixOffreVoyageModel.categorieVoyageurDesignation.$dirty) return errors\n            !this.$v.prixOffreVoyageModel.categorieVoyageurDesignation.required && errors.push('Veuillez selectionner une catégorie.')\n            return errors \n        },\n    },  \n\n    mounted(){\n        this.obtenirReferenceModeOffreVoyage();\n        this.obtenirOffreVoyageParCompagnieTransport();\n        this.editerModeOffreVoyage();\n\n    }\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}