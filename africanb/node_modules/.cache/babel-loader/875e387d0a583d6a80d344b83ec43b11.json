{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE } from '../globalConfig/globalConstConfig';\nimport { API_RECUPERER_PRIX_PAR_OFFRE_VOYAGE, API_RECUPERER_VILLE_ESCALE_PAR_OFFRE_VOYAGE } from '../globalConfig/globalConstConfig';\nimport axios from 'axios';\nimport $ from 'jquery';\nexport default {\n  name: 'ModifierOffreVoyage',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      simpleObject: {},\n      offreVoyageReceivedPrice: {\n        data: {\n          designation: null\n        }\n      },\n      offreVoyage: {\n        id: null,\n        designation: null,\n        description: null,\n        compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\",\n        typeOffreVoyageDesignation: null,\n        villeDepartDesignation: null,\n        villeDestinationDesignation: null\n      },\n      referenceTypeOffreVoyageList: [],\n      villesList: [],\n      referenceTypeOffreVoyage: {\n        referenceFamilleDesignation: \"referenceFamilleTypeOffreVoyage\"\n      },\n      objectToSend: {\n        datas: []\n      },\n      prixEtModeParOffreVoyageList: [],\n      villesEscalesParOffreVoyagesList: []\n    };\n  },\n  validations: {\n    offreVoyage: {\n      designation: {\n        required,\n        minLength: minLength(4)\n      },\n      description: {\n        required,\n        minLength: minLength(4)\n      },\n      villeDepartDesignation: {\n        required\n      },\n      villeDestinationDesignation: {\n        required\n      },\n      typeOffreVoyageDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    //OBTENIR LE PRIX ET LE MODE PAR OFFRE DE VOYAGE\n    async obtenirPrixEtModeParOffreVoyage() {\n      this.offreVoyageReceivedPrice.data.designation = this.offreVoyage.designation;\n      await axios.post(API_RECUPERER_PRIX_PAR_OFFRE_VOYAGE, this.offreVoyageReceivedPrice).then(response => {\n        this.prixEtModeParOffreVoyageList = response.data.items;\n        console.log(this.prixEtModeParOffreVoyageList);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async obtenirVilleEscaleParOffreVoyage() {\n      this.offreVoyageReceivedPrice.data.designation = this.offreVoyage.designation;\n      await axios.post(API_RECUPERER_VILLE_ESCALE_PAR_OFFRE_VOYAGE, this.offreVoyageReceivedPrice).then(response => {\n        console.log(response);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    //OBTENIR REFERENCE DESIGNATION TYPE OFFRE DE VOYAGE\n    async obtenirTypeOffreVoyageList() {\n      this.objectToSend.datas.push(this.referenceTypeOffreVoyage);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSend).then(response => {\n        this.referenceTypeOffreVoyageList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    async editerOffreVoyage() {\n      if (localStorage.getItem(\"offreVoyage\")) {\n        try {\n          const offreVoyageEditing = JSON.parse(localStorage.getItem(\"offreVoyage\"));\n          this.offreVoyage.id = offreVoyageEditing.id;\n          this.offreVoyage.designation = offreVoyageEditing.designation;\n          this.offreVoyage.description = offreVoyageEditing.description;\n          this.offreVoyage.typeOffreVoyageDesignation = offreVoyageEditing.typeOffreVoyageDesignation;\n          this.offreVoyage.villeDepartDesignation = offreVoyageEditing.villeDepartDesignation;\n          this.offreVoyage.villeDestinationDesignation = offreVoyageEditing.villeDestinationDesignation;\n          localStorage.removeItem(\"offreVoyage\");\n        } catch (error) {\n          localStorage.removeItem(\"offreVoyage\");\n        }\n      } else {\n        this.$router.replace({\n          path: '/selectionnerOffreVoyage'\n        });\n      }\n    },\n    async obtenirListeDesVillesDisponible() {\n      this.loading = false;\n      await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.simpleObject).then(response => {\n        this.villesList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UNE OFFRE DE VOYAGE\n\n    designationOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.designation.$dirty) return errors;\n      !this.$v.offreVoyage.designation.minLength && errors.push('Au moins quatres (4) caractères pour la designation');\n      !this.$v.offreVoyage.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    descriptionOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.description.$dirty) return errors;\n      !this.$v.offreVoyage.description.minLength && errors.push('Au moins quatres (4) caractères pour la description');\n      !this.$v.offreVoyage.description.required && errors.push('La description est obligatoire.');\n      return errors;\n    },\n    villeDepartErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.villeDepartDesignation.$dirty) return errors;\n      !this.$v.offreVoyage.villeDepartDesignation.required && errors.push('La ville de depart est obligatoire.');\n      return errors;\n    },\n    villeDestinationErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.villeDestinationDesignation.$dirty) return errors;\n      !this.$v.offreVoyage.villeDestinationDesignation.required && errors.push('La ville de destination est obligatoire.');\n      return errors;\n    },\n    typeOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.typeOffreVoyageDesignation.$dirty) return errors;\n      !this.$v.offreVoyage.typeOffreVoyageDesignation.required && errors.push('Le type d\\'offre de voyage est obligatoire.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirTypeOffreVoyageList();\n    this.editerOffreVoyage();\n    this.obtenirListeDesVillesDisponible();\n    this.obtenirPrixEtModeParOffreVoyage();\n    this.obtenirVilleEscaleParOffreVoyage();\n  }\n};","map":{"version":3,"mappings":";AAgEA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MAEAC;MAGAC;QACAL;UACAM;QACA;MACA;MAEAC;QACAC;QACAF;QACAG;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;MACAC;MAEAC;QACAC;MACA;MAEAC;QACAC;MACA;MAEAC;MACAC;IACA;EACA;EAEAC;IACAf;MACAD;QACAiB;QACAC;MACA;MACAf;QACAc;QACAC;MACA;MACAZ;QACAW;MACA;MACAV;QACAU;MACA;MACAZ;QACAY;MACA;IACA;EACA;EAEAE;IAEA;IACA;MACA;MACA;QACA;QACAC;MACA;QACAA;MACA;IACA;IAEA;MACA;MACA;QACAA;MACA;QACAA;MACA;IACA;IAGA;IACA;MACA;MACA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;IAEA;MACA;QACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACAE;QACA;UACAA;QACA;MACA;QACA;UAAAC;QAAA;MACA;IACA;IAEA;MACA;MACA;QACA;MACA;QACA;QACAH;QACAC;UACAD;QACA;MACA;IACA;EAEA;EAEAI;IAEA;;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EACA;EAGAC;IACA;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","data","errorMsg","successMsg","overlay","simpleObject","offreVoyageReceivedPrice","designation","offreVoyage","id","description","compagnieTransportRaisonSociale","typeOffreVoyageDesignation","villeDepartDesignation","villeDestinationDesignation","referenceTypeOffreVoyageList","villesList","referenceTypeOffreVoyage","referenceFamilleDesignation","objectToSend","datas","prixEtModeParOffreVoyageList","villesEscalesParOffreVoyagesList","validations","required","minLength","methods","console","$","setTimeout","localStorage","path","computed","designationOffreVoyageErrors","descriptionOffreVoyageErrors","villeDepartErrors","villeDestinationErrors","typeOffreVoyageErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["ModifierOffreVoyage.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form>\n            <v-card color=\"teal\">\n                <v-card-title class=\"title_card\">MODIFIER UNE OFFRE DE VOYAGE</v-card-title>\n                <v-card-subtitle>Modiifier portant sur votre de voyage</v-card-subtitle>\n            </v-card><br>\n\n            <v-card max-height=\"675\">\n                <v-card-title class=\"title_card\">INFORMATION(S) GÉNÉRALE(S) DE L'OFFRE DE VOYAGE\n                    <v-spacer></v-spacer>\n                    <v-btn small color=\"teal\"><v-icon color=\"white\">mdi-check</v-icon>Modifier</v-btn>\n                </v-card-title>\n                <v-container fluid>\n                    <v-row><v-col><v-text-field :error-messages=\"designationOffreVoyageErrors\" dense rounded outlined color=\"teal\" label=\"Désignation de l'offre\" v-model.trim=\"$v.offreVoyage.designation.$model\"></v-text-field></v-col></v-row><br>\n                    <v-row><v-col><v-textarea :error-messages=\"descriptionOffreVoyageErrors\" dense outlined rounded color=\"teal\" label=\"Description de l'offre\"></v-textarea></v-col></v-row><br>\n                    <v-row>\n                        <v-col cols=\"6\"><v-select :error-messages=\"villeDepartErrors\" v-model.trim=\"$v.offreVoyage.villeDepartDesignation.$model\" dense rounded outlined :items=\"villesList\" item-text=\"designation\" item-value=\"designation\" color=\"teal\" prefix=\"De :\" label=\"Ville de départ\"></v-select></v-col>\n                        <v-col cols=\"6\"><v-select :error-messages=\"villeDestinationErrors\" v-model.trim=\"$v.offreVoyage.villeDestinationDesignation.$model\" dense rounded outlined :items=\"villesList\" item-text=\"designation\" item-value=\"designation\" color=\"teal\" prefix=\"Vers :\" label=\"ville d'arrivée\"></v-select></v-col>\n                    </v-row><br>\n                    <v-row>\n                        <v-col cols=\"6\"><v-select :items=\"referenceTypeOffreVoyageList\" item-text=\"designation\" item-value=\"designation\" :error-messages=\"typeOffreVoyageErrors\" v-model.trim=\"$v.offreVoyage.typeOffreVoyageDesignation.$model\" dense outlined rounded color=\"teal\" label=\"Type de voyage\"></v-select></v-col>\n                    </v-row>\n                </v-container>\n            </v-card><br>\n\n            <v-card :loading=\"true\"><br>\n                <v-card-title>MODE ET PRIX DE L'OFFRE</v-card-title>\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"6\" v-for=\"(mode,index) in prixEtModeParOffreVoyageList\" :key=\"index\">\n                            <v-card>\n                                <v-card-title>Mode n° {{ index + 1 }}</v-card-title>\n                                <v-container>\n                                    <v-row>\n                                        <v-col cols=\"3\"><small class=\"muted-text\">Désignation :</small></v-col>\n                                        <v-col><span class=\"label-text\">{{ mode.designation }}</span></v-col>\n                                    </v-row>\n                                    <v-row>\n                                        <v-col cols=\"3\"><small class=\"muted-text\">Mode de l'offre :</small></v-col>\n                                        <v-col><span class=\"label-text\">{{ mode.modeDesignation }}</span></v-col>\n                                    </v-row>\n\n                                    <v-row>\n                                        <v-col cols=\"3\"><small class=\"muted-text\">Categorie :</small></v-col>\n                                        <v-col><span class=\"label-text\">{{ mode.modeDesignation }}</span></v-col>\n                                    </v-row>\n                                </v-container>\n                            </v-card>\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </v-card>\n\n        </v-form>\n\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert> \n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n\n<script>\nimport { required , minLength } from 'vuelidate/lib/validators';\nimport { API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE ,API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE } from '../globalConfig/globalConstConfig'\nimport { API_RECUPERER_PRIX_PAR_OFFRE_VOYAGE , API_RECUPERER_VILLE_ESCALE_PAR_OFFRE_VOYAGE } from '../globalConfig/globalConstConfig'\nimport axios from 'axios'\nimport $ from 'jquery'\nexport default {\n    name: 'ModifierOffreVoyage',\n    data(){\n        return{\n            errorMsg : null,\n            successMsg : null,\n            overlay : false,\n\n            simpleObject:{},\n\n\n            offreVoyageReceivedPrice:{\n                data:{\n                    designation:null\n                }\n            },\n\n            offreVoyage:{\n                id:null,\n                designation : null ,\n                description: null,\n                compagnieTransportRaisonSociale : \"COMPAGNIE KOUEVI CT\",\n                typeOffreVoyageDesignation : null,\n                villeDepartDesignation : null,\n                villeDestinationDesignation : null\n            },\n\n            referenceTypeOffreVoyageList:[],\n            villesList : [],\n\n            referenceTypeOffreVoyage:{\n                referenceFamilleDesignation: \"referenceFamilleTypeOffreVoyage\"\n            },\n\n            objectToSend:{\n                datas:[]\n            },\n\n            prixEtModeParOffreVoyageList:[],\n            villesEscalesParOffreVoyagesList:[],\n        }\n    },\n\n    validations:{\n        offreVoyage :{\n            designation:{\n                required,\n                minLength : minLength(4)\n            },\n            description:{\n                required,\n                minLength : minLength(4)\n            },\n            villeDepartDesignation:{\n                required,\n            },\n            villeDestinationDesignation:{\n                required,\n            },\n            typeOffreVoyageDesignation:{\n                required\n            }\n        }\n    },\n\n    methods:{\n\n        //OBTENIR LE PRIX ET LE MODE PAR OFFRE DE VOYAGE\n        async obtenirPrixEtModeParOffreVoyage(){\n            this.offreVoyageReceivedPrice.data.designation = this.offreVoyage.designation;\n            await axios.post(API_RECUPERER_PRIX_PAR_OFFRE_VOYAGE, this.offreVoyageReceivedPrice).then((response) => {\n                this.prixEtModeParOffreVoyageList = response.data.items\n                console.log(this.prixEtModeParOffreVoyageList)\n            }).catch((e) => {\n                console.log(e)\n            })\n        },\n\n        async obtenirVilleEscaleParOffreVoyage(){\n            this.offreVoyageReceivedPrice.data.designation = this.offreVoyage.designation;\n            await axios.post(API_RECUPERER_VILLE_ESCALE_PAR_OFFRE_VOYAGE, this.offreVoyageReceivedPrice).then((response) => {\n                console.log(response)\n            }).catch((e) => {\n                console.log(e)\n            })\n        },\n\n\n        //OBTENIR REFERENCE DESIGNATION TYPE OFFRE DE VOYAGE\n        async obtenirTypeOffreVoyageList(){\n            this.objectToSend.datas.push(this.referenceTypeOffreVoyage)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSend).then((response) => {\n                this.referenceTypeOffreVoyageList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n        async editerOffreVoyage(){\n            if (localStorage.getItem(\"offreVoyage\")) {\n                try {\n                    const offreVoyageEditing = JSON.parse(localStorage.getItem(\"offreVoyage\"));\n                    this.offreVoyage.id = offreVoyageEditing.id;\n                    this.offreVoyage.designation = offreVoyageEditing.designation;\n                    this.offreVoyage.description = offreVoyageEditing.description;\n                    this.offreVoyage.typeOffreVoyageDesignation = offreVoyageEditing.typeOffreVoyageDesignation;\n                    this.offreVoyage.villeDepartDesignation = offreVoyageEditing.villeDepartDesignation;\n                    this.offreVoyage.villeDestinationDesignation = offreVoyageEditing.villeDestinationDesignation;\n                    localStorage.removeItem(\"offreVoyage\");\n                } catch (error) {\n                    localStorage.removeItem(\"offreVoyage\");\n                }\n            }else{\n                this.$router.replace({path:'/selectionnerOffreVoyage'})\n            }\n        },\n\n        async obtenirListeDesVillesDisponible(){\n            this.loading = false\n            await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.simpleObject).then((response) => {\n                this.villesList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        }\n\n    },\n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UNE OFFRE DE VOYAGE\n\n        designationOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.designation.$dirty) return errors\n            !this.$v.offreVoyage.designation.minLength && errors.push('Au moins quatres (4) caractères pour la designation')\n            !this.$v.offreVoyage.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        descriptionOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.description.$dirty) return errors\n            !this.$v.offreVoyage.description.minLength && errors.push('Au moins quatres (4) caractères pour la description')\n            !this.$v.offreVoyage.description.required && errors.push('La description est obligatoire.')\n            return errors \n        },\n\n        villeDepartErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.villeDepartDesignation.$dirty) return errors\n            !this.$v.offreVoyage.villeDepartDesignation.required && errors.push('La ville de depart est obligatoire.')\n            return errors \n        },\n\n        villeDestinationErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.villeDestinationDesignation.$dirty) return errors\n            !this.$v.offreVoyage.villeDestinationDesignation.required && errors.push('La ville de destination est obligatoire.')\n            return errors \n        },\n\n        typeOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.typeOffreVoyageDesignation.$dirty) return errors\n            !this.$v.offreVoyage.typeOffreVoyageDesignation.required && errors.push('Le type d\\'offre de voyage est obligatoire.')\n            return errors \n        },\n    },\n    \n\n    mounted(){\n        this.obtenirTypeOffreVoyageList();\n        this.editerOffreVoyage();\n        this.obtenirListeDesVillesDisponible();\n        this.obtenirPrixEtModeParOffreVoyage();\n        this.obtenirVilleEscaleParOffreVoyage();\n    }\n}\n</script>\n\n<style scoped>\n    .title_card{\n        font-weight: bold;\n        font-size: 17px;\n    }\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .muted-text{\n        color: grey;\n    }\n\n    .label-text{\n        color: teal;\n        font-weight: 600;\n        font-size: 16px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}