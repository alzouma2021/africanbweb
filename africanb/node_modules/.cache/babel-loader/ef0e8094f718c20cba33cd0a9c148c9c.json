{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\n//import $ from 'jquery';\nimport { API_LOGIN_USER } from '../../globalConfig/globalConstConfig';\nimport { ROLE_ADMIN_SOCIETE_MERE, ROLE_ADMIN_COMPAGNIE_TRANSPORT } from '../../globalConfig/constUsersRoles';\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  name: \"connexionUtilisateurCompagnieTransport.vue\",\n  data() {\n    return {\n      overlay: false,\n      passwordIsVisible: false,\n      userLoginData: {\n        data: {\n          login: null,\n          password: null\n        }\n      },\n      userLogin: {\n        login: null,\n        password: null\n      }\n    };\n  },\n  validations: {\n    userLogin: {\n      login: {\n        required\n      },\n      password: {\n        required\n      }\n    }\n  },\n  methods: {\n    //SOUMISSION FORMULAIRE\n    submitForm() {},\n    async login() {\n      this.userLoginData.data.login = this.userLogin.login;\n      this.userLoginData.data.password = this.userLogin.password;\n      /*const config = {\n          headers : {\n              server_id: \"backend@africanb\",\n              client_id: \"frontend@africanb\"\n          }\n      }*/\n      //console.log(this.userLoginData);\n      //console.log(config)\n      await axios.post(API_LOGIN_USER, this.userLoginData, {\n        headers: {\n          'server_id': 'backend@africanb',\n          'client_id': 'frontend@africanb'\n        }\n      }).then(response => {\n        console.log(response);\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            var role = response.data.item.roleCode;\n            switch (role) {\n              case ROLE_ADMIN_SOCIETE_MERE:\n                localStorage.setItem('userIsAuthenticated', true);\n                localStorage.setItem('userRole', ROLE_ADMIN_SOCIETE_MERE);\n                this.overlay = true;\n                var parsedUserAuthenticated = JSON.stringify(response.data.item);\n                localStorage.setItem('userLoggedSocieteMere', parsedUserAuthenticated);\n                setTimeout(() => {\n                  this.$router.push({\n                    name: 'EspaceAdminSociete'\n                  });\n                }, 5000);\n                break;\n              case ROLE_ADMIN_COMPAGNIE_TRANSPORT:\n                localStorage.setItem('userIsAuthenticated', 'true');\n                localStorage.setItem('userRole', ROLE_ADMIN_COMPAGNIE_TRANSPORT);\n                this.overlay = true;\n                var parsedUserAdmin = JSON.stringify(response.data.item);\n                localStorage.setItem('userLoggedCompagnieTransport', parsedUserAdmin);\n                setTimeout(() => {\n                  this.$router.push({\n                    name: 'EspaceCompagnieTransport'\n                  });\n                }, 5000);\n                break;\n              default:\n                console.log('Nothing');\n                break;\n            }\n          } else {\n            this.$swal.fire('Connexion échouée', 'Error lors de la connexion', 'error');\n          }\n        } else {\n          this.$swal.fire('Connexion Impossible', 'Problème interne', 'error');\n        }\n      }).catch(e => {\n        this.$swal.fire('Connexion Impossible', e, 'error');\n      });\n    }\n  },\n  computed: {\n    //GESTION DES CONTRAINTES (SAISIE UTILISATEUR)\n\n    usernameError() {\n      const errors = [];\n      if (!this.$v.userLogin.login.$dirty) return errors;\n      !this.$v.userLogin.login.required && errors.push('Entrer votre pseudo ou e-mail de connexion.');\n      return errors;\n    },\n    passwordError() {\n      const errors = [];\n      if (!this.$v.userLogin.password.$dirty) return errors;\n      !this.$v.userLogin.password.required && errors.push('Entrer votre mot de passe.');\n      return errors;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":";AAgEA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MAEAC;MAEAC;QACAH;UACAI;UACAC;QACA;MACA;MAEAC;QACAF;QACAC;MACA;IAIA;EACA;EAEAE;IAEAD;MACAF;QACAI;MACA;MAEAH;QACAG;MACA;IACA;EAEA;EAEAC;IAEA;IACAC,cAEA;IAEA;MACA;MACA;MACA;AACA;AACA;AACA;AACA;AACA;MACA;MACA;MACA;QACAC;UACA;UACA;QACA;MACA;QACAC;QACA;UACA;YACA;YACA;cACA;gBACAC;gBACAA;gBACA;gBACA;gBACAA;gBACAC;kBACA;oBAAAf;kBAAA;gBACA;gBACA;cAEA;gBACAc;gBACAA;gBACA;gBACA;gBACAA;gBACAC;kBACA;oBAAAf;kBAAA;gBACA;gBACA;cAEA;gBACAa;gBACA;YAAA;UAEA;YACA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;IACA;EACA;EAEAG;IAEA;;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EAEA;EAEAC;AACA","names":["name","data","overlay","passwordIsVisible","userLoginData","login","password","userLogin","validations","required","methods","submitForm","headers","console","localStorage","setTimeout","computed","usernameError","passwordError","mounted"],"sourceRoot":"src/components/administration_compagnie_transport/authentification","sources":["connexionUtilisateurCompagnieTransport.vue"],"sourcesContent":["<template>\n    <v-app>  \n      <v-main>\n            <v-container>\n                <v-form @submit.prevent=\"login\">\n                    <v-row justify=\"center\" align=\"center\">\n                        <v-img max-height=\"100\" max-width=\"240\" src=\"../../../assets/logo_africanbus.jpg\"></v-img>\n                    </v-row><br><br>\n\n                    <v-row justify=\"center\">\n                        <v-card width=\"500px\"  elevation=\"10\" rounded=\"100px\"><br><br>\n                            \n                            <div class=\"text_auth\">\n                                <h2>AUTHENTIFIEZ-VOUS</h2>\n                                <small>Entrer vos paramètres de connexion pour accéder à votre espace de travail.</small>\n                            </div>\n                        \n                            <v-container>\n                                <label class=\"label\" for=\"\">Pseudo ou E-mail</label>\n                                <v-row>\n                                    <v-col>\n                                        <v-text-field class=\"input_field\" :error-messages=\"usernameError\" v-model.trim=\"$v.userLogin.login.$model\" dense outlined prepend-inner-icon=\"mdi-account\" color=\"primary\"></v-text-field>\n                                    </v-col>\n                                </v-row>\n                                \n                                <label class=\"label\" for=\"\">Mot de Passe</label>\n                                <v-row>\n                                    <v-col>\n                                        <v-text-field :error-messages=\"passwordError\" v-model.trim=\"$v.userLogin.password.$model\" :append-icon=\"passwordIsVisible ? 'mdi-eye' : 'mdi-eye-off'\"  class=\"input_field\" id=\"login_password\" \n                                            @click:append=\"passwordIsVisible = !passwordIsVisible\"\n                                            dense outlined prepend-inner-icon=\"mdi-lock-check\" color=\"primary\" :type=\"passwordIsVisible ? 'text' : 'password'\">\n                                        </v-text-field>\n                                    </v-col>\n                                </v-row>\n                                <v-row justify=\"center\">\n                                    <small class=\"password_forget\">Mot de passe oublié ?</small>\n                                </v-row>\n                            </v-container><br>\n\n                            <v-container>\n                                <v-row justify=\"center\">\n                                    <v-btn type=\"submit\" rounded color=\"primary\"><span class=\"connexion_text\">CONNEXION</span></v-btn>\n                                </v-row>\n                            </v-container><br>\n                        </v-card>\n                    </v-row>\n                </v-form><br><br>\n            </v-container>\n        </v-main><br>\n\n        <v-footer class=\"footer\" dark>\n            <v-container fluid>\n                <v-row>\n                    <v-col class=\"text-center\">\n                        <span class=\"font-weight-bold\">© copyright 2023 - African bus. Tous droits réservés</span>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </v-footer>\n        <v-overlay :value=\"overlay\"><v-progress-circular  indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\n//import $ from 'jquery';\nimport { API_LOGIN_USER } from '../../globalConfig/globalConstConfig'\nimport { ROLE_ADMIN_SOCIETE_MERE , ROLE_ADMIN_COMPAGNIE_TRANSPORT } from '../../globalConfig/constUsersRoles'\nimport { required } from 'vuelidate/lib/validators'\nexport default {\n    name:\"connexionUtilisateurCompagnieTransport.vue\",\n    data(){\n        return{\n            overlay : false ,\n\n            passwordIsVisible : false ,\n\n            userLoginData:{\n                data :{\n                    login : null,\n                    password : null\n                }\n            },\n\n            userLogin :{\n                login: null,\n                password:null,\n            },\n\n\n            \n        }\n    },\n\n    validations:{\n\n        userLogin:{\n            login:{\n                required\n            },\n\n            password:{\n                required\n            }\n        }\n\n    },\n\n    methods:{\n\n        //SOUMISSION FORMULAIRE\n        submitForm(){\n\n        },\n\n        async login(){\n            this.userLoginData.data.login = this.userLogin.login;\n            this.userLoginData.data.password = this.userLogin.password; \n            /*const config = {\n                headers : {\n                    server_id: \"backend@africanb\",\n                    client_id: \"frontend@africanb\"\n                }\n            }*/\n            //console.log(this.userLoginData);\n            //console.log(config)\n            await axios.post(API_LOGIN_USER, this.userLoginData , {\n                headers : {\n                    'server_id':'backend@africanb',\n                    'client_id':'frontend@africanb'\n                }\n            }  ).then((response) => {\n                console.log(response)\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        var role = response.data.item.roleCode;\n                        switch (role) {\n                            case ROLE_ADMIN_SOCIETE_MERE:\n                                localStorage.setItem('userIsAuthenticated', true);\n                                localStorage.setItem('userRole', ROLE_ADMIN_SOCIETE_MERE);\n                                this.overlay = true;\n                                var parsedUserAuthenticated = JSON.stringify(response.data.item);\n                                localStorage.setItem('userLoggedSocieteMere',parsedUserAuthenticated)\n                                setTimeout(() => {\n                                    this.$router.push({name:'EspaceAdminSociete'})\n                                }, 5000); \n                                break;\n\n                            case ROLE_ADMIN_COMPAGNIE_TRANSPORT:\n                                localStorage.setItem('userIsAuthenticated', 'true');\n                                localStorage.setItem('userRole', ROLE_ADMIN_COMPAGNIE_TRANSPORT);\n                                this.overlay = true;\n                                var parsedUserAdmin = JSON.stringify(response.data.item);\n                                localStorage.setItem('userLoggedCompagnieTransport',parsedUserAdmin)\n                                setTimeout(() => {\n                                    this.$router.push({name:'EspaceCompagnieTransport'})\n                                }, 5000);\n                                break;\n                        \n                            default:\n                                console.log('Nothing')\n                                break;\n                        }\n                    }else{\n                        this.$swal.fire('Connexion échouée','Error lors de la connexion','error')\n                    }  \n                }else{\n                    this.$swal.fire('Connexion Impossible','Problème interne','error')\n                }\n            }).catch((e) => {\n                this.$swal.fire('Connexion Impossible' , e , 'error')\n            })\n        },\n    },\n\n    computed:{\n        \n        //GESTION DES CONTRAINTES (SAISIE UTILISATEUR)\n\n        usernameError(){\n            const errors = [];\n            if (!this.$v.userLogin.login.$dirty) return errors\n            !this.$v.userLogin.login.required && errors.push('Entrer votre pseudo ou e-mail de connexion.')\n            return errors \n        },\n\n        passwordError(){\n            const errors = [];\n            if (!this.$v.userLogin.password.$dirty) return errors\n            !this.$v.userLogin.password.required && errors.push('Entrer votre mot de passe.')\n            return errors \n        }\n\n    },\n\n    mounted(){}\n}\n</script>\n\n<style scoped>\n    .title{\n        padding-top: 40px;\n        color: black;\n        font-weight: bold;\n        font-size: 60px;\n    }\n\n    .connexion_text{\n        color: white;\n    }\n\n    .password_forget{\n        color: grey;\n    }\n\n\n    .password_forget:hover{\n        cursor: pointer;\n        color: #487eb0;\n    }\n\n    .label{\n        font-size: 15px;\n        font-weight: bold;\n    }\n\n    .text_auth{\n        text-align: center;\n    }\n\n    .text_auth small{\n        color: grey;\n    }\n\n    .input_field {\n        font-family: Arial, Helvetica, sans-serif;\n        font-weight: bolder;\n        color: #596275;\n    }\n\n    .footer{\n        color: white;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}