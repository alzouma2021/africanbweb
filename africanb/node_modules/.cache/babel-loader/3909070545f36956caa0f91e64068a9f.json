{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, API_CREER_OFFRE_VOYAGE } from '../globalConfig/globalConstConfig';\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport $ from 'jquery';\nexport default {\n  name: \"CreerOffreVoyage\",\n  data() {\n    return {\n      successMsg: null,\n      errorMsg: null,\n      warningMsg: null,\n      villesList: [],\n      objectValue: {},\n      villesEscalesList: [],\n      referenceTypeOffreVoyageList: [],\n      objectToSend: {\n        datas: []\n      },\n      offreVoyageToSend: {\n        datas: []\n      },\n      //dialog: false,\n      //date:(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      //time:null,\n      //heureArrivee:null,\n      //heureDepart:null,\n      //menu2:false,\n      //menu3:false\n\n      offreVoyage: {\n        designation: null,\n        description: null,\n        compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\",\n        typeOffreVoyageDesignation: null,\n        villeDepartDesignation: null,\n        villeDestinationDesignation: null\n      },\n      referenceTypeOffreVoyage: {\n        referenceFamilleDesignation: \"referenceFamilleTypeOffreVoyage\"\n      }\n    };\n  },\n  validations: {\n    offreVoyage: {\n      designation: {\n        required,\n        minLength: minLength(4)\n      },\n      description: {\n        required,\n        minLength: minLength(4)\n      },\n      villeDepartDesignation: {\n        required\n      },\n      villeDestinationDesignation: {\n        required\n      },\n      typeOffreVoyageDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    //OBTENIR REFERENCE DESIGNATION TYPE OFFRE DE VOYAGE\n    async obtenirReferenceTypeOffreVoyage() {\n      this.objectToSend.datas.push(this.referenceTypeOffreVoyage);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSend).then(response => {\n        this.referenceTypeOffreVoyageList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    // CREATION D'UNE OFFRE DE VOYAGE \n\n    async creerOffreVoyage() {\n      this.offreVoyageToSend.datas.push(this.offreVoyage);\n      await axios.post(API_CREER_OFFRE_VOYAGE, this.offreVoyageToSend).then(response => {\n        if (response.status == 200) {\n          console.log(response);\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n            this.offreVoyageToSend.datas = [];\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.offreVoyageToSend.datas = [];\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n          this.offreVoyageToSend.datas = [];\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n          this.offreVoyageToSend.datas = [];\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n        this.offreVoyageToSend.datas = [];\n      });\n    },\n    // AJOUTER UNE VILLE D'ESCALE\n    ajouterNouvelleVilleEscale() {\n      var nouvelleVille = {};\n      this.villesEscalesList.push(nouvelleVille);\n    },\n    // SUPPRIMER UNE VILLE D'ESCALE\n    supprimerVilleEscale(position) {\n      this.villesEscalesList.splice(position, 1);\n    },\n    // RECUPERER LA LISTE DES VILLES ENREGISTRÉES\n    async readAllVilleFromApi() {\n      this.loading = false;\n      await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.objectValue).then(response => {\n        this.villesList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UNE OFFRE DE VOYAGE\n\n    designationOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.designation.$dirty) return errors;\n      !this.$v.offreVoyage.designation.minLength && errors.push('Au moins quatres (4) caractères pour la designation');\n      !this.$v.offreVoyage.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    descriptionOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.description.$dirty) return errors;\n      !this.$v.offreVoyage.description.minLength && errors.push('Au moins quatres (4) caractères pour la description');\n      !this.$v.offreVoyage.description.required && errors.push('La description est obligatoire.');\n      return errors;\n    },\n    villeDepartErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.villeDepartDesignation.$dirty) return errors;\n      !this.$v.offreVoyage.villeDepartDesignation.required && errors.push('La ville de depart est obligatoire.');\n      return errors;\n    },\n    villeDestinationErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.villeDestinationDesignation.$dirty) return errors;\n      !this.$v.offreVoyage.villeDestinationDesignation.required && errors.push('La ville de destination est obligatoire.');\n      return errors;\n    },\n    typeOffreVoyageErrors() {\n      const errors = [];\n      if (!this.$v.offreVoyage.typeOffreVoyageDesignation.$dirty) return errors;\n      !this.$v.offreVoyage.typeOffreVoyageDesignation.required && errors.push('Le type d\\'offre de voyage est obligatoire.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.readAllVilleFromApi();\n    this.obtenirReferenceTypeOffreVoyage();\n  }\n};","map":{"version":3,"mappings":";AA6KA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;MACA;MAEAC;QACAD;MACA;MAGA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;MACA;IACA;EACA;EAEAC;IACAT;MACAC;QACAS;QACAC;MACA;MACAT;QACAQ;QACAC;MACA;MACAN;QACAK;MACA;MACAJ;QACAI;MACA;MACAN;QACAM;MACA;IACA;EACA;EAEAE;IAEA;IACA;MACA;MACA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;IAEA;;IAEA;MACA;MACA;QACA;UACAE;UACA;YACA;YACAF;YACAC;cACAD;YACA;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;QACA;MACA;IACA;IAGA;IACAG;MACA;MACA;IACA;IAGA;IACAC;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;MACA;QACA;QACAJ;QACAC;UACAD;QACA;MACA;IACA;EAEA;EAEAK;IAEA;;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EAGA;EAEAC;IACA;IACA;EACA;AAEA","names":["name","data","successMsg","errorMsg","warningMsg","villesList","objectValue","villesEscalesList","referenceTypeOffreVoyageList","objectToSend","datas","offreVoyageToSend","offreVoyage","designation","description","compagnieTransportRaisonSociale","typeOffreVoyageDesignation","villeDepartDesignation","villeDestinationDesignation","referenceTypeOffreVoyage","referenceFamilleDesignation","validations","required","minLength","methods","$","setTimeout","console","ajouterNouvelleVilleEscale","supprimerVilleEscale","computed","designationOffreVoyageErrors","descriptionOffreVoyageErrors","villeDepartErrors","villeDestinationErrors","typeOffreVoyageErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["CreerOffreVoyage.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"creerOffreVoyage()\">\n            <v-container fluid>\n                <v-card elevation=\"5\">\n                    <v-card-title>CREER UNE OFFRE DE VOYAGE</v-card-title>\n                    <v-card-subtitle>Mettre en ligne un nouvel offre de voyage</v-card-subtitle><br>\n\n                    <v-container fluid>\n                        <v-row><v-col><v-text-field :error-messages=\"designationOffreVoyageErrors\" dense rounded outlined color=\"teal\" label=\"Désignation de l'offre\" v-model.trim=\"$v.offreVoyage.designation.$model\" ></v-text-field></v-col></v-row><br>\n                        <v-row><v-col><v-textarea :error-messages=\"descriptionOffreVoyageErrors\" dense outlined rounded color=\"teal\" label=\"Description de l'offre\"></v-textarea></v-col></v-row><br>\n                        <v-row>\n                            <v-col cols=\"6\"><v-select :error-messages=\"villeDepartErrors\" v-model.trim=\"$v.offreVoyage.villeDepartDesignation.$model\" dense rounded outlined :items=\"villesList\" item-text=\"designation\" item-value=\"designation\" color=\"teal\" prefix=\"De :\" label=\"Ville de départ\"></v-select></v-col>\n                            <v-col cols=\"6\"><v-select :error-messages=\"villeDestinationErrors\" v-model.trim=\"$v.offreVoyage.villeDestinationDesignation.$model\" dense rounded outlined :items=\"villesList\" item-text=\"designation\" item-value=\"designation\" color=\"teal\" prefix=\"Vers :\" label=\"ville d'arrivée\"></v-select></v-col>\n                        </v-row><br>\n                        <v-row>\n                            <v-col cols=\"6\"><v-select :items=\"referenceTypeOffreVoyageList\" item-text=\"designation\" item-value=\"designation\" :error-messages=\"typeOffreVoyageErrors\" v-model.trim=\"$v.offreVoyage.typeOffreVoyageDesignation.$model\" dense outlined rounded color=\"teal\" label=\"Type de voyage\"></v-select></v-col>\n                        </v-row><br>\n\n                        <v-row justify=\"space-around\">\n                            <v-col cols=\"6\"><v-btn outlined rounded><v-icon>mdi-sync</v-icon> REINITIALISER</v-btn></v-col>\n                            <v-col cols=\"6\"><v-btn type=\"submit\" outlined rounded dark color=\"teal\"><v-icon>mdi-check</v-icon> CRÉER L'OFFRE</v-btn></v-col>                \n                        </v-row>\n                    </v-container>\n                </v-card>\n            </v-container>\n        </v-form>\n\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert> \n        <v-alert class=\"myalert alert-warning\" type=\"warning\" width=\"350px\" dismissible>{{ warningMsg }}</v-alert>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n\n                <!--\n                <v-expansion-panel>\n                    <v-expansion-panel-header class=\"font-weight-bold\">PROGRAMME DE L'OFFRE</v-expansion-panel-header>\n                    <v-expansion-panel-content>\n                        <v-subheader>Programmez vos offres de voyages\n                            <v-spacer></v-spacer>\n                            <v-dialog v-model=\"dialog\" fullscreen hide-overlay transition=\"dialog-bottom-transition\">\n                                <template v-slot:activator=\"{ on, attrs }\">\n                                    <v-btn rounded small color=\"secondary\" dark v-bind=\"attrs\" v-on=\"on\"><v-icon>mdi-calendar-sync</v-icon> Programmer une offre</v-btn>\n                                </template>\n\n                                <v-card>\n                                    <v-toolbar dark dense color=\"teal\">\n                                        <v-btn icon dark @click=\"dialog = false\"><v-icon>mdi-close</v-icon></v-btn>\n                                        <v-toolbar-title><span class=\"font-weight-bold\">Programmer une offre</span></v-toolbar-title>\n                                        <v-spacer></v-spacer>\n                                        <v-toolbar-items>\n                                            <v-btn dark text @click=\"dialog = false\">Save</v-btn>\n                                        </v-toolbar-items>\n                                    </v-toolbar><br>\n\n                                    <v-container>\n                                        <v-row>                                          \n                                            <v-col cols=\"12\" sm=\"6\">\n                                                <v-text-field disabled rounded outlined dense color=\"teal\" v-model=\"dateRangeText\" label=\"Jour de la semaine\" prepend-icon=\"mdi-calendar\" readonly></v-text-field>\n                                            </v-col>\n\n                                            <v-col cols=\"12\" sm=\"6\">\n                                                <v-date-picker color=\"teal\" v-model=\"dates\"></v-date-picker>\n                                            </v-col>\n                                        </v-row>\n                                    </v-container>\n\n                                    <v-divider></v-divider>\n\n                                    <v-container>\n                                        <v-row>\n                                            <v-col>\n                                                <v-menu ref=\"menu\" v-model=\"menu\" :close-on-content-click=\"false\"\n                                                    :return-value.sync=\"date\" transition=\"scale-transition\" offset-y\n                                                    min-width=\"auto\">\n\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-text-field v-model=\"date\" label=\"Date de départ\" prepend-icon=\"mdi-calendar\"\n                                                            readonly v-bind=\"attrs\" v-on=\"on\">\n                                                        </v-text-field>\n                                                    </template>\n\n                                                    <v-date-picker v-model=\"date\" no-title scrollable>\n                                                        <v-spacer></v-spacer>\n                                                        <v-btn text color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                                                        <v-btn text color=\"primary\" @click=\"$refs.menu.save(date)\">OK</v-btn>\n                                                    </v-date-picker>\n                                                </v-menu>\n                                            </v-col>\n\n                                            <v-col>\n                                                <v-menu ref=\"menu\" v-model=\"menu\" :close-on-content-click=\"false\"\n                                                    :return-value.sync=\"date\" transition=\"scale-transition\" offset-y\n                                                    min-width=\"auto\">\n\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-text-field v-model=\"date\" label=\"Date d'arrivée\" prepend-icon=\"mdi-calendar\"\n                                                            readonly v-bind=\"attrs\" v-on=\"on\">\n                                                        </v-text-field>\n                                                    </template>\n\n                                                    <v-date-picker v-model=\"date\" no-title scrollable>\n                                                        <v-spacer></v-spacer>\n                                                        <v-btn text color=\"primary\" @click=\"menu = false\">Cancel</v-btn>\n                                                        <v-btn text color=\"primary\" @click=\"$refs.menu.save(date)\">OK</v-btn>\n                                                    </v-date-picker>\n                                                </v-menu>\n                                            </v-col>\n                                        </v-row>\n\n                                        <v-row>\n                                            <v-col>\n                                                <v-menu ref=\"menu\" v-model=\"menu2\" :close-on-content-click=\"false\" :nudge-right=\"40\"\n                                                    :return-value.sync=\"time\" transition=\"scale-transition\" offset-y max-width=\"290px\"\n                                                    min-width=\"290px\">\n\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-text-field v-model=\"heureDepart\" label=\"Heure de départ\" prepend-icon=\"mdi-clock-time-four-outline\"\n                                                            readonly v-bind=\"attrs\" v-on=\"on\">\n                                                        </v-text-field>\n                                                    </template>\n                                                    <v-time-picker v-if=\"menu2\" v-model=\"heureDepart\" full-width \n                                                        @click:minute=\"$refs.menu.save(heureDepart)\">\n                                                    </v-time-picker>\n                                                </v-menu>\n                                            </v-col>\n\n                                            <v-col>\n                                                <v-menu ref=\"menu\" v-model=\"menu3\" :close-on-content-click=\"false\" :nudge-right=\"40\"\n                                                    :return-value.sync=\"time\" transition=\"scale-transition\" offset-y max-width=\"290px\"\n                                                    min-width=\"290px\">\n\n                                                    <template v-slot:activator=\"{ on, attrs }\">\n                                                        <v-text-field v-model=\"heureDepart\" label=\"Heure d'arrivée'\" prepend-icon=\"mdi-clock-time-four-outline\"\n                                                            readonly v-bind=\"attrs\" v-on=\"on\">\n                                                        </v-text-field>\n                                                    </template>\n                                                    <v-time-picker v-if=\"menu3\" v-model=\"heureArrivee\" full-width \n                                                        @click:minute=\"$refs.menu.save(heureArrivee)\">\n                                                    </v-time-picker>\n                                                </v-menu>\n                                            </v-col>\n                                        </v-row>\n                                    </v-container>\n                                        \n                                    <v-divider></v-divider>\n                                </v-card>\n                            </v-dialog>\n                        </v-subheader>\n                                \n                    </v-expansion-panel-content>\n                </v-expansion-panel>\n\n                -->\n\n                <!--\n                <v-expansion-panel>\n                        <v-expansion-panel-header class=\"font-weight-bold\">CARACTERISTIQUES DE L'OFFRE</v-expansion-panel-header>\n                    <v-expansion-panel-content>\n                        <v-row>\n                            <v-col>\n                                <v-checkbox label=\"Wifi à bord\" color=\"teal\" value=\"red\" hide-details></v-checkbox>\n                            </v-col>\n                            <v-col>\n                                <v-checkbox label=\"Prise éléctrique\" color=\"teal\" value=\"red\" hide-details></v-checkbox>\n                            </v-col>\n                        </v-row>\n                    </v-expansion-panel-content>\n                </v-expansion-panel>\n            -->\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE , API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE , API_CREER_OFFRE_VOYAGE } from '../globalConfig/globalConstConfig'\nimport { required , minLength } from 'vuelidate/lib/validators'\nimport $ from 'jquery'\n\nexport default {\n    name:\"CreerOffreVoyage\",\n    data(){\n        return{\n            successMsg : null, \n            errorMsg:null,\n            warningMsg: null,\n            villesList : [],\n            objectValue : {},\n            villesEscalesList:[],\n            referenceTypeOffreVoyageList : [],\n            objectToSend:{\n                datas:[],\n            },\n\n            offreVoyageToSend:{\n                datas:[]\n            },\n            \n            \n            //dialog: false,\n            //date:(new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n            //time:null,\n            //heureArrivee:null,\n            //heureDepart:null,\n            //menu2:false,\n            //menu3:false\n\n            offreVoyage:{\n                designation : null ,\n                description: null,\n                compagnieTransportRaisonSociale : \"COMPAGNIE KOUEVI CT\",\n                typeOffreVoyageDesignation : null,\n                villeDepartDesignation : null,\n                villeDestinationDesignation : null\n            },\n\n            referenceTypeOffreVoyage:{\n                referenceFamilleDesignation: \"referenceFamilleTypeOffreVoyage\"\n            }\n        }\n    },\n\n    validations : {\n        offreVoyage :{\n            designation:{\n                required,\n                minLength : minLength(4)\n            },\n            description:{\n                required,\n                minLength : minLength(4)\n            },\n            villeDepartDesignation:{\n                required,\n            },\n            villeDestinationDesignation:{\n                required,\n            },\n            typeOffreVoyageDesignation:{\n                required\n            }\n        }\n    },\n\n    methods:{\n\n        //OBTENIR REFERENCE DESIGNATION TYPE OFFRE DE VOYAGE\n        async obtenirReferenceTypeOffreVoyage(){\n            this.objectToSend.datas.push(this.referenceTypeOffreVoyage)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSend).then((response) => {\n                this.referenceTypeOffreVoyageList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n        // CREATION D'UNE OFFRE DE VOYAGE \n\n        async creerOffreVoyage(){\n            this.offreVoyageToSend.datas.push(this.offreVoyage)\n            await axios.post(API_CREER_OFFRE_VOYAGE, this.offreVoyageToSend).then((response) => {\n                if (response.status == 200) {\n                    console.log(response)\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                        this.offreVoyageToSend.datas = [] ;\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.offreVoyageToSend.datas = [] ;\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                    this.offreVoyageToSend.datas = [] ;\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                    this.offreVoyageToSend.datas = [] ;\n                }\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n                this.offreVoyageToSend.datas = [] ;\n            })\n        },\n        \n\n        // AJOUTER UNE VILLE D'ESCALE\n        ajouterNouvelleVilleEscale(){\n            var nouvelleVille = {}\n            this.villesEscalesList.push(nouvelleVille);\n        },\n\n\n        // SUPPRIMER UNE VILLE D'ESCALE\n        supprimerVilleEscale(position){\n            this.villesEscalesList.splice(position , 1);\n        },\n\n        // RECUPERER LA LISTE DES VILLES ENREGISTRÉES\n        async readAllVilleFromApi(){\n            this.loading = false\n            await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.objectValue).then((response) => {\n                this.villesList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n    },\n\n    computed: {\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UNE OFFRE DE VOYAGE\n\n        designationOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.designation.$dirty) return errors\n            !this.$v.offreVoyage.designation.minLength && errors.push('Au moins quatres (4) caractères pour la designation')\n            !this.$v.offreVoyage.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        descriptionOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.description.$dirty) return errors\n            !this.$v.offreVoyage.description.minLength && errors.push('Au moins quatres (4) caractères pour la description')\n            !this.$v.offreVoyage.description.required && errors.push('La description est obligatoire.')\n            return errors \n        },\n\n        villeDepartErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.villeDepartDesignation.$dirty) return errors\n            !this.$v.offreVoyage.villeDepartDesignation.required && errors.push('La ville de depart est obligatoire.')\n            return errors \n        },\n\n        villeDestinationErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.villeDestinationDesignation.$dirty) return errors\n            !this.$v.offreVoyage.villeDestinationDesignation.required && errors.push('La ville de destination est obligatoire.')\n            return errors \n        },\n\n        typeOffreVoyageErrors(){\n           const errors = [];\n            if (!this.$v.offreVoyage.typeOffreVoyageDesignation.$dirty) return errors\n            !this.$v.offreVoyage.typeOffreVoyageDesignation.required && errors.push('Le type d\\'offre de voyage est obligatoire.')\n            return errors \n        },\n\n        \n    },\n\n    mounted(){\n        this.readAllVilleFromApi();\n        this.obtenirReferenceTypeOffreVoyage();\n    }\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}