{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { API_CREER_COMPAGNIE_TRANSPORT, API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE } from '../globalConfig/globalConstConfig';\nimport { required, minLength, maxLength, email } from 'vuelidate/lib/validators';\nexport default {\n  name: 'CreerDemandeAdhesion',\n  data() {\n    return {\n      successMsg: null,\n      errorMsg: null,\n      warningMsg: null,\n      overlay: false,\n      defaultObject: {},\n      villesList: [],\n      objectContainList: {\n        datas: []\n      },\n      compagnieTransport: {\n        designation: null,\n        description: null,\n        raisonSociale: null,\n        email: null,\n        sigle: null,\n        telephone: null,\n        villeDesignation: null\n      }\n    };\n  },\n  validations: {\n    compagnieTransport: {\n      designation: {\n        required,\n        minLength: minLength(4),\n        maxLength: maxLength(150)\n      },\n      description: {\n        required,\n        minLength: minLength(4),\n        maxLength: maxLength(150)\n      },\n      email: {\n        required,\n        email\n      },\n      raisonSociale: {\n        required\n      },\n      sigle: {\n        required\n      },\n      villeDesignation: {\n        required\n      },\n      telephone: {\n        required\n      }\n    }\n  },\n  methods: {\n    // OBTENIR LA LISTE DES VILLES DISPONIBLES\n    async obtenirListeVillesDispo() {\n      await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.defaultObject).then(response => {\n        this.villesList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    // CREATION D'UNE DEMANDE D'ADHESION\n    async creerDemandeAdhesion() {\n      this.objectContainList.datas.push(this.compagnieTransport);\n      this.overlay = true;\n      await axios.post(API_CREER_COMPAGNIE_TRANSPORT, this.objectContainList).then(response => {\n        if (response.status == 200) {\n          if (response.data.status.code == 800) {\n            this.successMsg = response.data.status.message;\n            $(\".alert-success\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-success\").fadeOut();\n            }, 4000);\n          } else {\n            this.errorMsg = response.data.status.message;\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n          }\n        } else if (response.status == 204) {\n          this.warningMsg = \"Erreur , lors de la création\";\n          $(\".alert-warning\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-warning\").fadeOut();\n          }, 3000);\n        } else {\n          this.errorMsg = \"Erreur , opération de création impossible\";\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 3000);\n        }\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 3000);\n      }).finally(() => {\n        this.overlay = false;\n      });\n    },\n    // SOUMETTRE LE FORMULAIRE\n    submitForm() {\n      this.$v.$touch();\n      if (this.$v.compagnieTransport.$invalid) {\n        this.errorMsg = 'Des informations sont manquantes';\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 3000);\n      } else {\n        this.creerDemandeAdhesion();\n      }\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UNE COMPAGNIE DE TRANSPORT\n\n    designationCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.designation.$dirty) return errors;\n      !this.$v.compagnieTransport.designation.maxLength && errors.push('La designation ne doit pas dépasser 600 caractères');\n      !this.$v.compagnieTransport.designation.required && errors.push('La désignation est obligatoire.');\n      !this.$v.compagnieTransport.designation.required && errors.push('La désignation doit avoir au minimum 8 caractères.');\n      return errors;\n    },\n    descriptionCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.description.$dirty) return errors;\n      !this.$v.compagnieTransport.description.maxLength && errors.push('La description ne doit pas dépasser 600 caractères');\n      !this.$v.compagnieTransport.description.required && errors.push('La déscription est obligatoire.');\n      !this.$v.compagnieTransport.description.required && errors.push('La déscription doit avoir au minimum 8 caractères.');\n      return errors;\n    },\n    raisonSocialeCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.raisonSociale.$dirty) return errors;\n      !this.$v.compagnieTransport.raisonSociale.required && errors.push('La raison sociale est obligatoire est obligatoire.');\n      return errors;\n    },\n    sigleCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.sigle.$dirty) return errors;\n      !this.$v.compagnieTransport.sigle.required && errors.push('Le sigle est obligatoire est obligatoire.');\n      return errors;\n    },\n    villeCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.villeDesignation.$dirty) return errors;\n      !this.$v.compagnieTransport.villeDesignation.required && errors.push('La ville est obligatoire est obligatoire.');\n      return errors;\n    },\n    telephoneCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.telephone.$dirty) return errors;\n      !this.$v.compagnieTransport.telephone.required && errors.push('Le numéro de téléphone est obligatoire.');\n      return errors;\n    },\n    emailCompagnieErrors() {\n      const errors = [];\n      if (!this.$v.compagnieTransport.email.$dirty) return errors;\n      !this.$v.compagnieTransport.email.required && errors.push('Le champ email est obligatoire');\n      !this.$v.compagnieTransport.email.email && errors.push('exemple@xyz.com');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirListeVillesDispo();\n  }\n};","map":{"version":3,"mappings":";AA0HA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MAGAC;MACAC;MAEAC;QACAC;MACA;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IACAR;MAEAC;QACAQ;QACAC;QACAC;MACA;MAEAT;QACAO;QACAC;QACAC;MACA;MAEAP;QACAK;QACAL;MACA;MAEAD;QACAM;MACA;MAEAJ;QACAI;MACA;MAEAF;QACAE;MACA;MAEAH;QACAG;MACA;IAEA;EACA;EAEAG;IAEA;IACA;MACA;QACA;MACA;QACA;QACAC;QACAC;UACAD;QACA;MACA;IACA;IAGA;IACA;MACA;MACA;MACA;QACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;UACA;YACA;YACAA;YACAC;cACAD;YACA;UACA;QAEA,OACA;UACA;UACAA;UACAC;YACAD;UACA;QACA,OACA;UACA;UACAA;UACAC;YACAD;UACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;MACA;QACA;MACA;IACA;IAGA;IACAE;MACA;MACA;QACA;QACAF;QACAC;UACAD;QACA;MACA,OACA;QACA;MACA;IACA;EACA;EAEAG;IAEA;;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EAEAC;IACA;EACA;AACA","names":["name","data","successMsg","errorMsg","warningMsg","overlay","defaultObject","villesList","objectContainList","datas","compagnieTransport","designation","description","raisonSociale","email","sigle","telephone","villeDesignation","validations","required","minLength","maxLength","methods","$","setTimeout","submitForm","computed","designationCompagnieErrors","descriptionCompagnieErrors","raisonSocialeCompagnieErrors","sigleCompagnieErrors","villeCompagnieErrors","telephoneCompagnieErrors","emailCompagnieErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["CreerDemandeAdhesion.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-card max-width=\"1000px\" class=\"mx-auto\">\n                <v-card-title><h4>CREER UNE DEMANDE D'ADHESION</h4></v-card-title>\n                <v-card-subtitle>Faites une requête aupres de l'administrateur pour votre espace personnel</v-card-subtitle>\n\n                <v-container>\n                    <v-row>\n                        <v-col>\n                            <v-text-field label=\"Désignation\" rounded dense outlined color=\"teal\" placeholder=\"Entrer une designation\"\n                                :error-messages=\"designationCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.designation.$model\"\n                                @input=\"$v.compagnieTransport.designation.$touch()\"\n                                @blur=\"$v.compagnieTransport.designation.$touch()\">\n                            </v-text-field>\n                        </v-col>\n\n                        <v-col>\n                            <v-text-field label=\"Votre e-mail\" rounded dense outlined color=\"teal\" append-icon=\"mdi-email\"\n                                placeholder=\"Adresse électronique de la compagnie\"\n                                :error-messages=\"emailCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.email.$model\"\n                                @input=\"$v.compagnieTransport.email.$touch()\"\n                                @blur=\"$v.compagnieTransport.email.$touch()\">\n\n                            </v-text-field>\n                        </v-col>\n                    </v-row>\n                    \n                    <v-row>\n                        <v-col>\n                            <v-textarea label=\"Description \" rounded dense outlined color=\"teal\" aria-placeholder=\"entrer une description\"\n                                placeholder=\"Entrer une Description\"\n                                :error-messages=\"descriptionCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.description.$model\"\n                                @input=\"$v.compagnieTransport.description.$touch()\"\n                                @blur=\"$v.compagnieTransport.description.$touch()\"\n                            ></v-textarea>\n                        </v-col>\n                    </v-row>\n\n                    <v-row>\n                        <v-col cols=\"3\">\n                            <v-select rounded dense outlined :items=\"villesList\" color=\"teal\"\n                                item-text=\"designation\"\n                                item-value=\"designation\"\n                                :error-messages=\"villeCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.villeDesignation.$model\"\n                                @input=\"$v.compagnieTransport.villeDesignation.$touch()\"\n                                @blur=\"$v.compagnieTransport.villeDesignation.$touch()\">\n                            </v-select>\n                        </v-col>\n\n                        <v-col cols=\"2\">\n                            <v-label>N° Télephone :</v-label>\n                        </v-col>\n\n                        <v-col cols=\"3\">\n                            <v-text-field rounded dense outlined color=\"teal\" prefix=\"+225\" append-icon=\"mdi-phone\"\n                                placeholder=\"N° de Téléphone\"\n                                :error-messages=\"telephoneCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.telephone.$model\"\n                                @input=\"$v.compagnieTransport.telephone.$touch()\"\n                                @blur=\"$v.compagnieTransport.telephone.$touch()\">\n\n                            </v-text-field>\n                        </v-col>\n                    </v-row>\n\n                    <v-row>\n                        <v-col cols=\"2\">\n                            <v-label>Sigle:</v-label>\n                        </v-col>\n                        <v-col cols=\"5\">\n                            <v-text-field rounded dense outlined color=\"teal\"\n                                placeholder=\"le sigle de la compagnie\"\n                                :error-messages=\"sigleCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.sigle.$model\"\n                                @input=\"$v.compagnieTransport.sigle.$touch()\"\n                                @blur=\"$v.compagnieTransport.sigle.$touch()\">\n\n                            </v-text-field>\n                        </v-col>\n                    </v-row>\n\n                    <v-row>\n                        <v-col cols=\"2\">\n                            <v-label>Raison sociale:</v-label>\n                        </v-col>\n                        <v-col>\n                            <v-text-field rounded dense outlined color=\"teal\"\n                                placeholder=\"La raison sociale de la compagnie\"\n                                :error-messages=\"raisonSocialeCompagnieErrors\"\n                                v-model.trim=\"$v.compagnieTransport.raisonSociale.$model\"\n                                @input=\"$v.compagnieTransport.raisonSociale.$touch()\"\n                                @blur=\"$v.compagnieTransport.raisonSociale.$touch()\">\n\n                            </v-text-field>\n                        </v-col>\n                    </v-row>\n\n                </v-container>\n\n                <v-container>\n                    <v-row class=\"mt-5\" justify-lg=\"space-around\">\n                        <v-col cols=\"5\"><v-btn rounded color=\"secondary\"><v-icon>mdi-sync</v-icon> REINITIALISER</v-btn></v-col>\n                        <v-col cols=\"5\"><v-btn rounded type=\"submit\" color=\"primary\"><v-icon>mdi-check</v-icon> FAIRE UNE DEMANDE</v-btn></v-col>\n                    </v-row>\n                </v-container>\n            </v-card>   \n        </v-form>\n\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert> \n        <v-alert class=\"myalert alert-warning\" type=\"warning\" width=\"350px\" dismissible>{{ warningMsg }}</v-alert>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n\n    </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\nimport $ from 'jquery'\nimport { API_CREER_COMPAGNIE_TRANSPORT , API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE } from '../globalConfig/globalConstConfig'\nimport { required , minLength , maxLength , email } from 'vuelidate/lib/validators'\nexport default {\n    name:'CreerDemandeAdhesion',\n    data(){\n        return{\n            successMsg : null, \n            errorMsg:null,\n            warningMsg: null,\n            overlay : false,\n            \n\n            defaultObject:{},\n            villesList:[],\n\n            objectContainList :{\n                datas : []\n            },\n\n            compagnieTransport:{\n                designation: null,\n                description: null,\n                raisonSociale:null,\n                email:null,\n                sigle:null,\n                telephone:null,\n                villeDesignation:null,\n            }\n        }\n    },\n\n    validations:{\n        compagnieTransport:{\n\n            designation :{\n                required,\n                minLength : minLength(4),\n                maxLength : maxLength(150),\n            },\n\n            description :{\n                required,\n                minLength : minLength(4),\n                maxLength : maxLength(150),\n            },\n\n            email:{\n                required,\n                email\n            },\n\n            raisonSociale:{\n                required\n            },\n\n            sigle:{\n                required\n            },\n\n            villeDesignation:{\n                required,\n            },\n\n            telephone :{\n                required,\n            },\n\n        }\n    },\n\n    methods:{\n\n        // OBTENIR LA LISTE DES VILLES DISPONIBLES\n        async obtenirListeVillesDispo(){\n            await axios.post(API_OBTENIR_LISTE_DES_VILLES_DISPONIBLE, this.defaultObject).then((response) => {\n                this.villesList = response.data.items\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n\n        // CREATION D'UNE DEMANDE D'ADHESION\n        async creerDemandeAdhesion(){\n            this.objectContainList.datas.push(this.compagnieTransport)\n            this.overlay = true ;\n            await axios.post(API_CREER_COMPAGNIE_TRANSPORT, this.objectContainList).then((response) => {\n                if (response.status == 200) {\n                    if (response.data.status.code == 800) {\n                        this.successMsg = response.data.status.message\n                        $(\".alert-success\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-success\").fadeOut(); \n                        }, 4000)\n                    }else{\n                        this.errorMsg = response.data.status.message\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                    }  \n                    \n                }\n                else if (response.status == 204) {\n                    this.warningMsg = \"Erreur , lors de la création\";\n                    $(\".alert-warning\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-warning\").fadeOut(); \n                    }, 3000)\n                }\n                else{\n                    this.errorMsg = \"Erreur , opération de création impossible\";\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 3000)\n                }\n            }).catch((e) => {\n                this.errorMsg = e;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 3000)\n            }).finally(() => {\n                this.overlay = false;\n            })\n        },\n\n\n        // SOUMETTRE LE FORMULAIRE\n        submitForm(){\n            this.$v.$touch();\n            if (this.$v.compagnieTransport.$invalid) {\n                this.errorMsg = 'Des informations sont manquantes'\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 3000)\n            }\n            else{\n                this.creerDemandeAdhesion();\n            }\n        },\n    },\n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UNE COMPAGNIE DE TRANSPORT\n\n        designationCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.designation.$dirty) return errors\n            !this.$v.compagnieTransport.designation.maxLength && errors.push('La designation ne doit pas dépasser 600 caractères')\n            !this.$v.compagnieTransport.designation.required && errors.push('La désignation est obligatoire.')\n            !this.$v.compagnieTransport.designation.required && errors.push('La désignation doit avoir au minimum 8 caractères.')\n            return errors\n        },\n\n        descriptionCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.description.$dirty) return errors\n            !this.$v.compagnieTransport.description.maxLength && errors.push('La description ne doit pas dépasser 600 caractères')\n            !this.$v.compagnieTransport.description.required && errors.push('La déscription est obligatoire.')\n            !this.$v.compagnieTransport.description.required && errors.push('La déscription doit avoir au minimum 8 caractères.')\n            return errors\n        },\n\n        raisonSocialeCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.raisonSociale.$dirty) return errors\n            !this.$v.compagnieTransport.raisonSociale.required && errors.push('La raison sociale est obligatoire est obligatoire.')\n            return errors\n        },\n\n        sigleCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.sigle.$dirty) return errors\n            !this.$v.compagnieTransport.sigle.required && errors.push('Le sigle est obligatoire est obligatoire.')\n            return errors\n        },\n\n        villeCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.villeDesignation.$dirty) return errors\n            !this.$v.compagnieTransport.villeDesignation.required && errors.push('La ville est obligatoire est obligatoire.')\n            return errors\n        },\n\n        telephoneCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.telephone.$dirty) return errors\n            !this.$v.compagnieTransport.telephone.required && errors.push('Le numéro de téléphone est obligatoire.')\n            return errors\n        },\n        emailCompagnieErrors(){\n            const errors = [];\n            if (!this.$v.compagnieTransport.email.$dirty) return errors\n            !this.$v.compagnieTransport.email.required && errors.push('Le champ email est obligatoire')\n            !this.$v.compagnieTransport.email.email && errors.push('exemple@xyz.com')\n            return errors\n        },\n    },\n\n    mounted(){\n        this.obtenirListeVillesDispo()\n    }\n}\n</script>\n\n<style scoped>\n    .title{\n        color: teal;\n        font-weight: bold;\n    }\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }       \n</style>"]},"metadata":{},"sourceType":"module"}