{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required } from 'vuelidate/lib/validators';\n//import axios from 'axios'\nexport default {\n  name: 'ModeModePaiement',\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      modePaiementModel: {\n        designation: null,\n        telephoneGenerique: null,\n        typeModePaiementDesignation: null,\n        compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\"\n      }\n    };\n  },\n  validations: {\n    modePaiementModel: {\n      designation: {\n        required\n      },\n      telephoneGenerique: {\n        required\n      },\n      typeModePaiementDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    //MODE EDITION MODE PAIEMENT\n    async editerModePaiement() {\n      if (localStorage.getItem(\"modePaiement\")) {\n        try {\n          const modePaiementEditing = JSON.parse(localStorage.getItem(\"modePaiement\"));\n          this.modePaiementModel.id = modePaiementEditing.id;\n          this.modePaiementModel.designation = modePaiementEditing.designation;\n          this.modePaiementModel.description = modePaiementEditing.description;\n          this.modePaiementModel.typeOffreVoyageDesignation = modePaiementEditing.typeOffreVoyageDesignation;\n          localStorage.removeItem(\"modePaiement\");\n        } catch (error) {\n          localStorage.removeItem(\"modePaiement\");\n        }\n      } else {\n        this.$router.replace({\n          path: '/selectionnerModeAbonnementEtPaiement'\n        });\n      }\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN MODE DE PAIEMENT\n    designationPaiementErrors() {\n      const errors = [];\n      if (!this.$v.modePaiementModel.designation.$dirty) return errors;\n      !this.$v.modePaiementModel.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    telephoneGeneriqueErrors() {\n      const errors = [];\n      if (!this.$v.modePaiementModel.telephoneGenerique.$dirty) return errors;\n      !this.$v.modePaiementModel.telephoneGenerique.required && errors.push('Entrer un numero de téléphone.');\n      return errors;\n    },\n    typePaiementErrors() {\n      const errors = [];\n      if (!this.$v.modePaiementModel.typeModePaiementDesignation.$dirty) return errors;\n      !this.$v.modePaiementModel.typeModePaiementDesignation.required && errors.push('La selection du type de paiement est obligatoire.');\n      return errors;\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"mappings":";AAmCA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAC;IAEAL;MACAC;QACAK;MACA;MACAJ;QACAI;MACA;MACAH;QACAG;MACA;IACA;EAEA;EAEAC;IAGA;IACA;MACA;QACA;UACA;UACA;UACA;UACA;UACA;UACAC;QACA;UACAA;QACA;MACA;QACA;UAAAC;QAAA;MACA;IACA;EAEA;EAEAC;IAEA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EACA;EAEAC,WAEA;AACA","names":["name","data","errorMsg","successMsg","modePaiementModel","designation","telephoneGenerique","typeModePaiementDesignation","compagnieTransportRaisonSociale","validations","required","methods","localStorage","path","computed","designationPaiementErrors","telephoneGeneriqueErrors","typePaiementErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["ModifierModePaiement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card width=\"1200\" elevation=\"3\">\n                    <v-card-title>MODE DE PAIEMENTS</v-card-title>\n                    <v-card-subtitle>Modifiez vos modes de paiements</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col>\n                                <v-text-field :error-messages=\"designationPaiementErrors\" rounded dense outlined label=\"Désignation\" v-model.trim=\"$v.modePaiementModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-text-field :error-messages=\"telephoneGeneriqueErrors\" rounded dense outlined color=\"teal\" label=\"Numéro de téléphone\" v-model.trim=\"$v.modePaiementModel.telephoneGenerique.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-select :items=\"referenceTypePaiementList\" item-value=\"designation\" item-text=\"designation\" :error-messages=\"typePaiementErrors\" rounded dense outlined color=\"teal\" label=\"Type de paiement\" v-model.trim=\"$v.modePaiementModel.typeModePaiementDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n\n                    <v-card-actions>\n                        <v-btn small rounded outlined>REINITIALISER</v-btn>\n                        <v-btn small type=\"submit\" rounded outlined color=\"primary\">CREER</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport { required } from 'vuelidate/lib/validators';\n//import axios from 'axios'\nexport default {\n    name:'ModeModePaiement',\n    data(){\n        return{\n            errorMsg :null,\n            successMsg :null,\n\n            modePaiementModel:{\n                designation: null,\n                telephoneGenerique: null,\n                typeModePaiementDesignation : null,\n                compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\",\n            },\n        }\n    }, \n\n    validations:{\n\n        modePaiementModel:{\n            designation:{\n                required\n            },\n            telephoneGenerique:{\n                required\n            },\n            typeModePaiementDesignation:{\n                required\n            }\n        }\n\n    },\n\n    methods:{\n\n\n        //MODE EDITION MODE PAIEMENT\n        async editerModePaiement(){\n            if (localStorage.getItem(\"modePaiement\")) {\n                try {\n                    const modePaiementEditing = JSON.parse(localStorage.getItem(\"modePaiement\"));\n                    this.modePaiementModel.id = modePaiementEditing.id;\n                    this.modePaiementModel.designation = modePaiementEditing.designation;\n                    this.modePaiementModel.description = modePaiementEditing.description;\n                    this.modePaiementModel.typeOffreVoyageDesignation = modePaiementEditing.typeOffreVoyageDesignation;\n                    localStorage.removeItem(\"modePaiement\");\n                } catch (error) {\n                    localStorage.removeItem(\"modePaiement\");\n                }\n            }else{\n                this.$router.replace({path:'/selectionnerModeAbonnementEtPaiement'})\n            }\n        },\n\n    }, \n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN MODE DE PAIEMENT\n        designationPaiementErrors(){\n           const errors = [];\n            if (!this.$v.modePaiementModel.designation.$dirty) return errors\n            !this.$v.modePaiementModel.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        telephoneGeneriqueErrors(){\n           const errors = [];\n            if (!this.$v.modePaiementModel.telephoneGenerique.$dirty) return errors\n            !this.$v.modePaiementModel.telephoneGenerique.required && errors.push('Entrer un numero de téléphone.')\n            return errors \n        },\n\n        typePaiementErrors(){\n           const errors = [];\n            if (!this.$v.modePaiementModel.typeModePaiementDesignation.$dirty) return errors\n            !this.$v.modePaiementModel.typeModePaiementDesignation.required && errors.push('La selection du type de paiement est obligatoire.')\n            return errors \n        },\n    },\n\n    mounted(){\n\n    },\n}\n</script>\n\n<style scoped>\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}