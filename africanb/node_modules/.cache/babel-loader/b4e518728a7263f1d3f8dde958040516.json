{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { API_CREER_MODE_ABONNEMENT, API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE } from '../globalConfig/globalConstConfig';\nexport default {\n  name: \"CreerModeAbonnement\",\n  data() {\n    return {\n      errorMsg: null,\n      successMsg: null,\n      overlay: false,\n      menuDebutAbonnement: false,\n      menuFinAbonnement: false,\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      referenceAbonnementList: [],\n      referencePeriodiciteList: [],\n      typeAbonnement: null,\n      referenceAbonnement: {\n        referenceFamilleDesignation: \"referenceFamilleAbonnement\"\n      },\n      referencePeriodiciteAbonnement: {\n        referenceFamilleDesignation: \"referenceFamillePeriodiciteAbonnement\"\n      },\n      objectToSendReferenceAbonnement: {\n        datas: []\n      },\n      objectToSendReferencePeriodicite: {\n        datas: []\n      },\n      modeAbonnementPeriodiqueModel: {\n        designation: null,\n        dateDebutAbonnement: null,\n        dateFinAbonnement: null,\n        redevance: null,\n        redevancePublicite: null,\n        typeModeAbonnementDesignation: null,\n        periodiciteAbonnementDesignation: null,\n        compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\"\n      },\n      modeAbonnementPrelevementModel: {\n        designation: null,\n        dateDebutAbonnement: null,\n        dateFinAbonnement: null,\n        taux: null,\n        periodiciteAbonnementDesignation: null,\n        compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\"\n      },\n      abonnementObject: {\n        datas: []\n      }\n    };\n  },\n  validations: {\n    modeAbonnementPeriodiqueModel: {\n      designation: {\n        required\n      },\n      dateDebutAbonnement: {\n        required\n      },\n      dateFinAbonnement: {\n        required\n      },\n      redevance: {\n        required\n      },\n      redevancePublicite: {\n        required\n      },\n      typeModeAbonnementDesignation: {\n        required\n      },\n      periodiciteAbonnementDesignation: {\n        required\n      }\n    },\n    modeAbonnementPrelevementModel: {\n      designation: {\n        required\n      },\n      taux: {\n        required\n      },\n      dateDebutAbonnement: {\n        required\n      },\n      dateFinAbonnement: {\n        required\n      },\n      periodiciteAbonnementDesignation: {\n        required\n      }\n    }\n  },\n  methods: {\n    // SOUMISSION DU FORMULAIRE\n    submitForm() {\n      this.creerAbonnementCompagnie();\n    },\n    // CREER UN MODE ABONNEMENT DE TYPE PERIODIQUE\n    async creerModeAbonnementPeriodique() {\n      if (this.typeAbonnement == 'AbonnementPeriodique') {\n        this.overlay = true;\n        this.abonnementObject.datas = [];\n        this.modeAbonnementPeriodiqueModel.typeModeAbonnementDesignation = this.typeAbonnement;\n        this.abonnementObject.datas.push(this.modeAbonnementPeriodiqueModel);\n        await axios.post(API_CREER_MODE_ABONNEMENT, this.abonnementObject).then(response => {\n          if (response.status == 200) {\n            if (response.data.status.code == 800) {\n              this.successMsg = response.data.status.message;\n              $(\".alert-success\").fadeIn();\n              setTimeout(function () {\n                $(\".alert-success\").fadeOut();\n              }, 4000);\n              this.programmeObject.datas = [];\n            } else {\n              this.errorMsg = response.data.status.message;\n              $(\".alert-error\").fadeIn();\n              setTimeout(function () {\n                $(\".alert-error\").fadeOut();\n              }, 3000);\n              this.abonnementObject.datas = [];\n            }\n          } else if (response.status == 204) {\n            this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n            $(\".alert-warning\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-warning\").fadeOut();\n            }, 3000);\n            this.abonnementObject.datas = [];\n          } else {\n            this.errorMsg = \"Erreur , opération de création impossible\";\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.abonnementObject.datas = [];\n          }\n        }).catch(e => {\n          this.errorMsg = e;\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n          this.abonnementObject.datas = [];\n        }).finally(() => {\n          this.overlay = false;\n        });\n      }\n    },\n    // CREER UN MODE ABONNEMENT DE TYPE PRELEVEMENT\n    async creerModeAbonnementPrelevement() {\n      if (this.typeAbonnement == 'AbonnementPrelevement') {\n        this.overlay = true;\n        this.abonnementObject.datas = [];\n        this.modeAbonnementPrelevementModel.typeModeAbonnementDesignation = this.typeAbonnement;\n        this.abonnementObject.datas.push(this.modeAbonnementPrelevementModel);\n        await axios.post(API_CREER_MODE_ABONNEMENT, this.abonnementObject).then(response => {\n          if (response.status == 200) {\n            if (response.data.status.code == 800) {\n              this.successMsg = response.data.status.message;\n              $(\".alert-success\").fadeIn();\n              setTimeout(function () {\n                $(\".alert-success\").fadeOut();\n              }, 4000);\n              this.programmeObject.datas = [];\n            } else {\n              this.errorMsg = response.data.status.message;\n              $(\".alert-error\").fadeIn();\n              setTimeout(function () {\n                $(\".alert-error\").fadeOut();\n              }, 3000);\n              this.abonnementObject.datas = [];\n            }\n          } else if (response.status == 204) {\n            this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n            $(\".alert-warning\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-warning\").fadeOut();\n            }, 3000);\n            this.abonnementObject.datas = [];\n          } else {\n            this.errorMsg = \"Erreur , opération de création impossible\";\n            $(\".alert-error\").fadeIn();\n            setTimeout(function () {\n              $(\".alert-error\").fadeOut();\n            }, 3000);\n            this.abonnementObject.datas = [];\n          }\n        }).catch(e => {\n          this.errorMsg = e;\n          $(\".alert-error\").fadeIn();\n          setTimeout(function () {\n            $(\".alert-error\").fadeOut();\n          }, 4000);\n          this.abonnementObject.datas = [];\n        }).finally(() => {\n          this.overlay = false;\n        });\n      }\n    },\n    // CREER UN MODE D'ABONNEMENT\n    async creerAbonnementCompagnie() {\n      this.creerModeAbonnementPeriodique();\n      this.creerModeAbonnementPrelevement();\n    },\n    //OBTENIR REFERENCE DESIGNATION ABONNEMENT\n    async obtenirReferenceAbonnementList() {\n      this.objectToSendReferenceAbonnement.datas.push(this.referenceAbonnement);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceAbonnement).then(response => {\n        this.referenceAbonnementList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    //OBTENIR REFERENCE DESIGNATION PERIODICITÉ\n    async obtenirReferencePeriodicteAbonnementList() {\n      this.objectToSendReferencePeriodicite.datas.push(this.referencePeriodiciteAbonnement);\n      await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferencePeriodicite).then(response => {\n        this.referencePeriodiciteList = response.data.items;\n      }).catch(e => {\n        this.errorMsg = e;\n        $(\".alert-error\").fadeIn();\n        setTimeout(function () {\n          $(\".alert-error\").fadeOut();\n        }, 4000);\n      });\n    },\n    myFormat(menu, model) {},\n    // FORMAT DE LA DATE\n    formatDate(date) {\n      console.log('Bonjour');\n      if (!date) return null;\n      const [year, month, day] = date.split('-');\n      return `${day}/${month}/${year}`;\n    },\n    //VERIFIE SI CEST UN NOMBRE POSITIF\n    isNumber(item) {\n      return item > 0;\n    }\n  },\n  computed: {\n    // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN ABONNEMENT\n\n    designationAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementPeriodiqueModel.designation.$dirty) return errors;\n      !this.$v.modeAbonnementPeriodiqueModel.designation.required && errors.push('La désignation est obligatoire.');\n      return errors;\n    },\n    redevanceAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementPeriodiqueModel.redevance.$dirty) return errors;\n      !this.isNumber(this.modeAbonnementPeriodiqueModel.redevance) && errors.push('Saisissez un prix correct.');\n      !this.$v.modeAbonnementPeriodiqueModel.redevance.required && errors.push('Le prix est obligatoire.');\n      return errors;\n    },\n    typeAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementPeriodiqueModel.typeModeAbonnementDesignation.$dirty) return errors;\n      !this.$v.modeAbonnementPeriodiqueModel.typeModeAbonnementDesignation.required && errors.push('La selection du type du sac est obligatoire.');\n      return errors;\n    },\n    periodiciteAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementPeriodiqueModel.periodiciteAbonnementDesignation.$dirty) return errors;\n      !this.$v.modeAbonnementPeriodiqueModel.periodiciteAbonnementDesignation.required && errors.push('Veuillez renseigner ce champs.');\n      return errors;\n    },\n    redevancePubAbonnementErrors() {\n      const errors = [];\n      !this.isNumber(this.modeAbonnementPeriodiqueModel.redevancePublicite) && errors.push('Saisissez un nombre correct.');\n      if (!this.$v.modeAbonnementPeriodiqueModel.redevancePublicite.$dirty) return errors;\n      !this.$v.modeAbonnementPeriodiqueModel.redevancePublicite.required && errors.push('Veuillez renseigner ce champs.');\n      return errors;\n    },\n    dateDebutAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.$dirty) return errors;\n      !this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.required && errors.push('Veuillez renseigner ce champs.');\n      return errors;\n    },\n    dateFinAbonnementErrors() {\n      const errors = [];\n      if (!this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.$dirty) return errors;\n      !this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.required && errors.push('Veuillez renseigner ce champs.');\n      return errors;\n    }\n  },\n  mounted() {\n    this.obtenirReferenceAbonnementList();\n    this.obtenirReferencePeriodicteAbonnementList();\n  }\n};","map":{"version":3,"mappings":";AA6GA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MAEAC;MAEAC;QACAC;MACA;MACAC;QACAD;MACA;MAEAE;QACAC;MACA;MACAC;QACAD;MACA;MAEAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAR;QACAC;QACAC;QACAO;QACAH;QACAC;MACA;MAEAG;QACAb;MACA;IACA;EACA;EAEAc;IACAZ;MAEAC;QACAY;MACA;MACAX;QACAW;MACA;MACAV;QACAU;MACA;MACAT;QACAS;MACA;MACAR;QACAQ;MACA;MACAP;QACAO;MACA;MACAN;QACAM;MACA;IAEA;IAEAJ;MACAR;QACAY;MACA;MACAH;QACAG;MACA;MACAX;QACAW;MACA;MACAV;QACAU;MACA;MACAN;QACAM;MACA;IACA;EACA;EAEAC;IACA;IACAC;MACA;IACA;IAGA;IACA;MACA;QACA;QACA;QACA;QACA;QACA;UACA;YACA;cACA;cACAC;cACAC;gBACAD;cACA;cACA;YACA;cACA;cACAA;cACAC;gBACAD;cACA;cACA;YACA;UAEA,OACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA,OACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IAGA;IACA;MACA;QACA;QACA;QACA;QACA;QACA;UACA;YACA;cACA;cACAA;cACAC;gBACAD;cACA;cACA;YACA;cACA;cACAA;cACAC;gBACAD;cACA;cACA;YACA;UAEA,OACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA,OACA;YACA;YACAA;YACAC;cACAD;YACA;YACA;UACA;QACA;UACA;UACAA;UACAC;YACAD;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IAMA;IACA;MACA;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;MACA;QACA;QACAA;QACAC;UACAD;QACA;MACA;IACA;IAGAE,uBAEA;IAEA;IACAC;MACAC;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;EACA;EAEAC;IAEA;;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;EAGA;EAEAC;IACA;IACA;EACA;AAEA","names":["name","data","errorMsg","successMsg","overlay","menuDebutAbonnement","menuFinAbonnement","date","referenceAbonnementList","referencePeriodiciteList","typeAbonnement","referenceAbonnement","referenceFamilleDesignation","referencePeriodiciteAbonnement","objectToSendReferenceAbonnement","datas","objectToSendReferencePeriodicite","modeAbonnementPeriodiqueModel","designation","dateDebutAbonnement","dateFinAbonnement","redevance","redevancePublicite","typeModeAbonnementDesignation","periodiciteAbonnementDesignation","compagnieTransportRaisonSociale","modeAbonnementPrelevementModel","taux","abonnementObject","validations","required","methods","submitForm","$","setTimeout","myFormat","formatDate","console","isNumber","computed","designationAbonnementErrors","redevanceAbonnementErrors","typeAbonnementErrors","periodiciteAbonnementErrors","redevancePubAbonnementErrors","dateDebutAbonnementErrors","dateFinAbonnementErrors","mounted"],"sourceRoot":"src/components/administration_compagnie_transport","sources":["CreerModeAbonnement.vue"],"sourcesContent":["<template>\n    <v-app>\n        <v-form @submit.prevent=\"submitForm\">\n            <v-container fluid>\n                <v-card width=\"1200\" elevation=\"3\">\n                    <v-card-title>MODE D'ABONNEMENTS</v-card-title>\n                    <v-card-subtitle>Définissez vos modes d'abonnements</v-card-subtitle>\n                    <v-container>\n                        <v-row>\n                            <v-col cols=\"5\">\n                                <v-select :items=\"referenceAbonnementList\" item-text=\"designation\" item-value=\"designation\" :error-messages=\"typeAbonnementErrors\" rounded dense outlined color=\"teal\" label=\"Type d'abonnement\" v-model=\"typeAbonnement\"></v-select>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n                    <v-container v-if=\"typeAbonnement == 'AbonnementPeriodique'\">\n                        <v-row>\n                            <v-col>\n                                <v-text-field :error-messages=\"designationAbonnementErrors\" rounded dense outlined label=\"Désignation de l'abonnement\" v-model.trim=\"$v.modeAbonnementPeriodiqueModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-text-field :error-messages=\"redevanceAbonnementErrors\" rounded dense outlined color=\"teal\" label=\"redevance\" suffix=\"FCFA\" v-model.trim=\"$v.modeAbonnementPeriodiqueModel.redevance.$model\"></v-text-field>\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col>\n                                <v-menu ref=\"menuDebutAbonnement\" v-model=\"menuDebutAbonnement\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y max-width=\"290px\" min-width=\"auto\">\n                                    <template v-slot:activator=\"{ on, attrs }\">\n                                        <v-text-field :error-messages=\"dateDebutAbonnementErrors\" dense outlined rounded v-model.trim=\"$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.$model\" label=\"Debut de l'abonnement\" prepend-icon=\"mdi-clock-time-four-outline\"\n                                            readonly  v-bind=\"attrs\" v-on=\"on\">\n                                        </v-text-field>\n                                    </template>\n                                    <v-date-picker @input=\"menuDebutAbonnement = false\" v-model.trim=\"$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.$model\" no-title></v-date-picker>\n                                </v-menu>\n                            </v-col>\n\n                            <v-col>\n                                <v-menu ref=\"menuFinAbonnement\" v-model=\"menuFinAbonnement\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y max-width=\"290px\" min-width=\"auto\">\n                                    <template v-slot:activator=\"{ on, attrs }\">\n                                        <v-text-field :error-messages=\"dateFinAbonnementErrors\" dense outlined rounded v-model.trim=\"$v.modeAbonnementPeriodiqueModel.dateFinAbonnement.$model\" label=\"Fin de l'abonnement\" prepend-icon=\"mdi-clock-time-four-outline\"\n                                            readonly  v-bind=\"attrs\" v-on=\"on\">\n                                        </v-text-field>\n                                    </template>\n                                    <v-date-picker @input=\"menuFinAbonnement = false\" v-model.trim=\"$v.modeAbonnementPeriodiqueModel.dateFinAbonnement.$model\" no-title></v-date-picker>\n                                </v-menu>\n                            </v-col>\n\n                            \n                        </v-row>\n                        <v-row>\n                            <v-col>\n                                <v-text-field :error-messages=\"redevancePubAbonnementErrors\" rounded dense outlined color=\"teal\" label=\"redevance publicité\" v-model.trim=\"$v.modeAbonnementPeriodiqueModel.redevancePublicite.$model\" suffix=\"FCFA\" ></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-select :items=\"referencePeriodiciteList\" item-value=\"designation\" item-text=\"designation\" :error-messages=\"periodiciteAbonnementErrors\" rounded dense outlined color=\"teal\" label=\"périodicité Abonnement\" v-model.trim=\"$v.modeAbonnementPeriodiqueModel.periodiciteAbonnementDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                    </v-container>\n\n                    <v-container v-if=\"typeAbonnement == 'AbonnementPrelevement'\">\n                        <v-row>\n                            <v-col>\n                                <v-text-field :error-messages=\"designationAbonnementErrors\" rounded dense outlined label=\"Désignation de l'abonnement\" v-model.trim=\"$v.modeAbonnementPrelevementModel.designation.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-text-field :error-messages=\"redevanceAbonnementErrors\" rounded dense outlined color=\"teal\" label=\"taux\" suffix=\"%\" v-model.trim=\"$v.modeAbonnementPrelevementModel.taux.$model\"></v-text-field>\n                            </v-col>\n                            <v-col>\n                                <v-select :items=\"referencePeriodiciteList\" item-value=\"designation\" item-text=\"designation\" :error-messages=\"periodiciteAbonnementErrors\" rounded dense outlined color=\"teal\" label=\"périodicité Abonnement\" v-model.trim=\"$v.modeAbonnementPrelevementModel.periodiciteAbonnementDesignation.$model\"></v-select>\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col>\n                                <v-menu ref=\"menuDebutAbonnement\" v-model=\"menuDebutAbonnement\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y max-width=\"290px\" min-width=\"auto\">\n                                    <template v-slot:activator=\"{ on, attrs }\">\n                                        <v-text-field :error-messages=\"dateDebutAbonnementErrors\" dense outlined rounded v-model.trim=\"$v.modeAbonnementPrelevementModel.dateDebutAbonnement.$model\" label=\"Debut de l'abonnement\" prepend-icon=\"mdi-calendar\"\n                                            readonly  v-bind=\"attrs\" v-on=\"on\">\n                                        </v-text-field>\n                                    </template>\n                                    <v-date-picker @input=\"menuDebutAbonnement = false\" v-model.trim=\"$v.modeAbonnementPrelevementModel.dateDebutAbonnement.$model\" no-title></v-date-picker>\n                                </v-menu>\n                            </v-col>\n\n                            <v-col>\n                                <v-menu ref=\"menuFinAbonnement\" v-model=\"menuFinAbonnement\" :close-on-content-click=\"false\" transition=\"scale-transition\" offset-y max-width=\"290px\" min-width=\"auto\">\n                                    <template v-slot:activator=\"{ on, attrs }\">\n                                        <v-text-field :error-messages=\"dateFinAbonnementErrors\"  dense outlined rounded v-model.trim=\"$v.modeAbonnementPrelevementModel.dateFinAbonnement.$model\" label=\"Fin de l'abonnement\" prepend-icon=\"mdi-calendar\"\n                                            readonly  v-bind=\"attrs\" v-on=\"on\">\n                                        </v-text-field>\n                                    </template>\n                                    <v-date-picker @input=\"menuFinAbonnement = false\" v-model.trim=\"$v.modeAbonnementPrelevementModel.dateFinAbonnement.$model\" no-title></v-date-picker>\n                                </v-menu>\n                            </v-col> \n                        </v-row>\n                    </v-container>\n\n                    <v-card-actions>\n                        <v-btn small rounded outlined>REINITIALISER</v-btn>\n                        <v-btn small type=\"submit\" rounded outlined color=\"primary\">VALIDER</v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-container>\n        </v-form>\n        <v-alert class=\"myalert alert-error\" type=\"error\" width=\"350px\" dismissible>{{ errorMsg }}</v-alert>\n        <v-alert class=\"myalert alert-success\" type=\"success\" width=\"350px\" dismissible>{{ successMsg }}</v-alert>\n        <v-overlay :value=\"overlay\"><v-progress-circular indeterminate size=\"64\"></v-progress-circular></v-overlay>\n    </v-app>\n</template>\n\n<script>\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios'\nimport $ from 'jquery'\nimport { API_CREER_MODE_ABONNEMENT, API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE } from '../globalConfig/globalConstConfig'\n\nexport default {\n    name:\"CreerModeAbonnement\",\n    data(){\n        return{\n            errorMsg : null,\n            successMsg : null,\n            overlay : false,\n            menuDebutAbonnement:false,\n            menuFinAbonnement:false,\n            date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n\n            referenceAbonnementList:[],\n            referencePeriodiciteList:[],\n\n            typeAbonnement : null,\n\n            referenceAbonnement:{\n                referenceFamilleDesignation: \"referenceFamilleAbonnement\"\n            },\n            referencePeriodiciteAbonnement:{\n                referenceFamilleDesignation:\"referenceFamillePeriodiciteAbonnement\"\n            },\n\n            objectToSendReferenceAbonnement:{\n                datas:[],\n            },\n            objectToSendReferencePeriodicite:{\n                datas:[],\n            },\n\n            modeAbonnementPeriodiqueModel:{\n                designation : null,\n                dateDebutAbonnement:null,\n                dateFinAbonnement: null,\n                redevance : null, \n                redevancePublicite : null,\n                typeModeAbonnementDesignation: null,\n                periodiciteAbonnementDesignation: null,\n                compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\",\n            },\n\n            modeAbonnementPrelevementModel:{\n                designation : null,\n                dateDebutAbonnement:null,\n                dateFinAbonnement: null,\n                taux:null,\n                periodiciteAbonnementDesignation: null,\n                compagnieTransportRaisonSociale: \"COMPAGNIE KOUEVI CT\",\n            },\n\n            abonnementObject:{\n                datas:[],\n            }\n        }\n    },\n\n    validations:{\n        modeAbonnementPeriodiqueModel:{\n            \n            designation:{\n                required\n            },\n            dateDebutAbonnement:{\n                required\n            },\n            dateFinAbonnement:{\n                required\n            },\n            redevance:{\n                required\n            },\n            redevancePublicite:{\n                required\n            },\n            typeModeAbonnementDesignation:{\n                required\n            },\n            periodiciteAbonnementDesignation:{\n                required\n            },\n\n        },\n\n        modeAbonnementPrelevementModel:{\n            designation:{\n                required\n            },\n            taux:{\n                required\n            },\n            dateDebutAbonnement:{\n                required\n            },\n            dateFinAbonnement:{\n                required\n            },\n            periodiciteAbonnementDesignation:{\n                required\n            },\n        }\n    },\n    \n    methods:{\n        // SOUMISSION DU FORMULAIRE\n        submitForm(){\n            this.creerAbonnementCompagnie();\n        },\n\n\n        // CREER UN MODE ABONNEMENT DE TYPE PERIODIQUE\n        async creerModeAbonnementPeriodique(){\n            if (this.typeAbonnement == 'AbonnementPeriodique') {\n                this.overlay = true;\n                this.abonnementObject.datas = [];\n                this.modeAbonnementPeriodiqueModel.typeModeAbonnementDesignation = this.typeAbonnement;\n                this.abonnementObject.datas.push(this.modeAbonnementPeriodiqueModel);\n                await axios.post(API_CREER_MODE_ABONNEMENT, this.abonnementObject).then((response) => {\n                    if (response.status == 200) {\n                        if (response.data.status.code == 800) {\n                            this.successMsg = response.data.status.message\n                            $(\".alert-success\").fadeIn();\n                            setTimeout(function(){\n                                $(\".alert-success\").fadeOut(); \n                            }, 4000)\n                            this.programmeObject.datas = [] ;\n                        }else{\n                            this.errorMsg = response.data.status.message\n                            $(\".alert-error\").fadeIn();\n                            setTimeout(function(){\n                                $(\".alert-error\").fadeOut(); \n                            }, 3000)\n                            this.abonnementObject.datas = [] ;\n                        }  \n                    \n                    }\n                    else if (response.status == 204) {\n                        this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n                        $(\".alert-warning\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-warning\").fadeOut(); \n                        }, 3000)\n                        this.abonnementObject.datas = [] ;\n                    }\n                    else{\n                        this.errorMsg = \"Erreur , opération de création impossible\";\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.abonnementObject.datas = [] ;\n                    }\n                }).catch((e) => {\n                    this.errorMsg = e ;\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                    this.abonnementObject.datas = [] ;\n                }).finally(() => {\n                    this.overlay = false;\n                })\n            }\n        },\n\n\n        // CREER UN MODE ABONNEMENT DE TYPE PRELEVEMENT\n        async creerModeAbonnementPrelevement(){\n            if (this.typeAbonnement == 'AbonnementPrelevement'){\n                this.overlay = true;\n                this.abonnementObject.datas = [];\n                this.modeAbonnementPrelevementModel.typeModeAbonnementDesignation = this.typeAbonnement;\n                this.abonnementObject.datas.push(this.modeAbonnementPrelevementModel);\n                await axios.post(API_CREER_MODE_ABONNEMENT, this.abonnementObject).then((response) => {\n                    if (response.status == 200) {\n                        if (response.data.status.code == 800) {\n                            this.successMsg = response.data.status.message\n                            $(\".alert-success\").fadeIn();\n                            setTimeout(function(){\n                                $(\".alert-success\").fadeOut(); \n                            }, 4000)\n                            this.programmeObject.datas = [] ;\n                        }else{\n                            this.errorMsg = response.data.status.message\n                            $(\".alert-error\").fadeIn();\n                            setTimeout(function(){\n                                $(\".alert-error\").fadeOut(); \n                            }, 3000)\n                            this.abonnementObject.datas = [] ;\n                        }  \n                    \n                    }\n                    else if (response.status == 204) {\n                        this.warningMsg = \"Erreur , lors de la création de l'offre de voyage\";\n                        $(\".alert-warning\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-warning\").fadeOut(); \n                        }, 3000)\n                        this.abonnementObject.datas = [] ;\n                    }\n                    else{\n                        this.errorMsg = \"Erreur , opération de création impossible\";\n                        $(\".alert-error\").fadeIn();\n                        setTimeout(function(){\n                            $(\".alert-error\").fadeOut(); \n                        }, 3000)\n                        this.abonnementObject.datas = [] ;\n                    }\n                }).catch((e) => {\n                    this.errorMsg = e ;\n                    $(\".alert-error\").fadeIn();\n                    setTimeout(function(){\n                        $(\".alert-error\").fadeOut(); \n                    }, 4000)\n                    this.abonnementObject.datas = [] ;\n                }).finally(() => {\n                    this.overlay = false;\n                })\n            }\n        },\n\n\n    \n\n\n        // CREER UN MODE D'ABONNEMENT\n        async creerAbonnementCompagnie(){\n            this.creerModeAbonnementPeriodique();\n            this.creerModeAbonnementPrelevement();\n        },\n\n        //OBTENIR REFERENCE DESIGNATION ABONNEMENT\n        async obtenirReferenceAbonnementList(){\n            this.objectToSendReferenceAbonnement.datas.push(this.referenceAbonnement)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferenceAbonnement).then((response) => {\n                this.referenceAbonnementList = response.data.items;\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n        //OBTENIR REFERENCE DESIGNATION PERIODICITÉ\n        async obtenirReferencePeriodicteAbonnementList(){\n            this.objectToSendReferencePeriodicite.datas.push(this.referencePeriodiciteAbonnement)\n            await axios.post(API_OBTENIR_REFERENCE_PAR_PAR_FAMILLE, this.objectToSendReferencePeriodicite).then((response) => {\n                this.referencePeriodiciteList = response.data.items;\n            }).catch((e) => {\n                this.errorMsg = e ;\n                $(\".alert-error\").fadeIn();\n                setTimeout(function(){\n                    $(\".alert-error\").fadeOut(); \n                }, 4000)\n            })\n        },\n\n\n        myFormat(menu , model){\n\n        },\n\n        // FORMAT DE LA DATE\n        formatDate (date) {\n            console.log('Bonjour')\n            if (!date) return null\n            const [year, month, day] = date.split('-')\n            return `${day}/${month}/${year}`\n        },\n\n        //VERIFIE SI CEST UN NOMBRE POSITIF\n        isNumber(item){\n          return  item  > 0\n        },\n    },\n\n    computed:{\n\n        // GESTION DES CONTRAINTES DE CHAMPS D'ENTREES POUR LA CREATION D'UN ABONNEMENT\n\n        designationAbonnementErrors(){\n           const errors = [];\n            if (!this.$v.modeAbonnementPeriodiqueModel.designation.$dirty) return errors\n            !this.$v.modeAbonnementPeriodiqueModel.designation.required && errors.push('La désignation est obligatoire.')\n            return errors \n        },\n\n        redevanceAbonnementErrors(){\n           const errors = [];\n            if (!this.$v.modeAbonnementPeriodiqueModel.redevance.$dirty) return errors\n            !this.isNumber(this.modeAbonnementPeriodiqueModel.redevance) && errors.push('Saisissez un prix correct.')\n            !this.$v.modeAbonnementPeriodiqueModel.redevance.required && errors.push('Le prix est obligatoire.')\n            return errors \n        },\n\n        typeAbonnementErrors(){\n           const errors = [];\n            if (!this.$v.modeAbonnementPeriodiqueModel.typeModeAbonnementDesignation.$dirty) return errors\n            !this.$v.modeAbonnementPeriodiqueModel.typeModeAbonnementDesignation.required && errors.push('La selection du type du sac est obligatoire.')\n            return errors \n        },\n\n        periodiciteAbonnementErrors(){\n            const errors = [];\n            if (!this.$v.modeAbonnementPeriodiqueModel.periodiciteAbonnementDesignation.$dirty) return errors\n            !this.$v.modeAbonnementPeriodiqueModel.periodiciteAbonnementDesignation.required && errors.push('Veuillez renseigner ce champs.')\n            return errors \n        },\n\n        redevancePubAbonnementErrors(){\n            const errors = [];\n            !this.isNumber(this.modeAbonnementPeriodiqueModel.redevancePublicite) && errors.push('Saisissez un nombre correct.')\n            if (!this.$v.modeAbonnementPeriodiqueModel.redevancePublicite.$dirty) return errors\n            !this.$v.modeAbonnementPeriodiqueModel.redevancePublicite.required && errors.push('Veuillez renseigner ce champs.')\n            return errors \n        },\n\n        dateDebutAbonnementErrors(){\n            const errors = [];\n            if (!this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.$dirty) return errors\n            !this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.required && errors.push('Veuillez renseigner ce champs.')\n            return errors \n        },\n\n        dateFinAbonnementErrors(){\n            const errors = [];\n            if (!this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.$dirty) return errors\n            !this.$v.modeAbonnementPeriodiqueModel.dateDebutAbonnement.required && errors.push('Veuillez renseigner ce champs.')\n            return errors \n        },\n\n\n    },\n\n    mounted(){\n        this.obtenirReferenceAbonnementList();\n        this.obtenirReferencePeriodicteAbonnementList();\n    }\n\n}\n</script>\n\n<style scoped>\n\n    .myalert{\n        display: none;\n        z-index: 1900;\n    }\n\n    .alert-success{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-error{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    }\n\n    .alert-warning{\n        position: fixed;\n        top: 25px;\n        right:2%;\n        width: 25%;\n    } \n\n</style>"]},"metadata":{},"sourceType":"module"}